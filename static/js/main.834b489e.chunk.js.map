{"version":3,"sources":["logo.svg","helpers/Authentication.js","components/Header.js","helpers/AuthHeaders.js","API/APIHelper.js","components/LoginForm.js","Main.js","API/RecipesEndPointAPI.js","components/Recipes.js","components/RecipePreview.js","components/About.js","components/RegisterForm.js","components/AddOrEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Authentication","SaveToken","token","remember","Cookie","set","expires","LoadToken","get","LogOut","remove","isAuthenticated","SaveUserData","userJson","userName","email","id","favouriteRecipes","LoadUserEmail","LoadUserId","LoadUserName","LoadUserFavouritesRecipes","SaveFavouritesRecipes","Header","Navbar","variant","bg","sticky","expand","Brand","as","Link","to","alt","src","process","width","height","className","Toggle","aria-controls","Collapse","Nav","Text","history","useHistory","onClick","push","AuthButton","AuthHeaders","GetBearer","APIHelper","Register","LogIn","GetUserData","EditUser","API_URL","Email","UserName","Password","ConfirmPassword","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","text","Promise","reject","catch","error","username","password","URLSearchParams","append","json","Authorization","FavouriteRecipes","Id","formdata","FormData","LoginForm","handleCheckboxChange","event","setState","RememberMe","target","checked","state","Login","InfoMessage","DuringOperation","isLogged","handleChange","bind","handleSubmit","this","name","value","data","console","log","access_Token","obj","parse","message","preventDefault","class","Spinner","animation","role","Alert","Form","onSubmit","LoginMessage","Group","controlId","Label","Control","type","required","placeholder","onChange","Check","label","Button","Component","Main","RecipesEndPointAPI","GetAllRecipesLoggedUser","DownloadImage","DeleteRecipes","InsertRecipe","GetRecipeByID","PutRecipes","GetPublicRecipes","GetFavouritesRecipes","PageSize","PageNumber","blob","RecipeName","Instructions","IngredientsArr","Image","isPublic","Ingredients","join","RecipeId","NameOfImage","Recipes","props","UserOrPublicOrFavourites","CanNext","CanPrevious","TotalPages","PageNumberUserRecipes","PageNumberPublicRecipes","PageNumberFavouritesRecipes","PreviousPage","NextPage","nextProps","CheckPath","pathName","window","location","hash","forEach","element","DisplayAsPublic","favourites","DisplayAsFavourite","includes","recipeId","DisplayAsFavourites","pageNumberUser","pageBackUser","pageNumberPublic","pageBackPublic","pageNumberFavourites","pageBackFavourites","undefined","pageNumber","LoadPublicRecipes","LoadUserRecipes","LoadFavouritesRecipes","AddDisplayAsPublicProperty","length","totalPages","NavigationButtonsActiveDeactive","DonwloadRecipeImage","LoadUserData","AddDisplayAsFavouritesProperty","outside","that","item","key","nameOfImage","image","map","el","URL","createObjectURL","actualPage","prevstate","recipes","Col","sm","md","lg","xl","pathname","recipeProps","UserOrPublicOrFavouritesProps","Container","fluid","Row","size","disabled","RecipePreview","Name","ID","showModal","RecipeDeleted","LastVisit","PageBack","IsFavourite","handleModalClose","handleModalShow","handleRecipeDelete","handleFavouriteCLick","match","params","instruction","ingredients","PageBackUser","PageBackPublic","PageBackFavourites","localBoolFavourites","favourtesArr","index","indexOf","splice","arraySemicolon","Modal","centered","closeButton","Title","Body","Footer","delete","onHide","editButton","deleteButton","authorInfo","favouriteButton","ModalDelete","show","About","useState","appVersion","setAppVersion","useEffect","href","rel","RegisterForm","InfoMessageIsError","CanRegister","ClearForm","output","document","getElementById","reset","RegisterMessage","AddOrEdit","Edit","CanSubmit","IngredientsInput","SelectedIngredient","ImagePreview","ImageName","OperationComplete","onChangeFile","handleIngredientAdd","handleRecipeClick","handleIngredientRemove","DeleteImage","bsCustomFileInput","init","e","nextState","innerHTML","filter","x","fileName","files","fileExt","split","pop","file","reader","FileReader","readAsDataURL","onloadend","result","ListGroup","Item","active","action","SubmitMessage","style","accept","for","PrivateRoute","component","rest","exact","strict","path","render","from","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,kC,0NCG9BC,EAAiB,CAC1BC,UAaJ,SAAmBC,EAAOC,GAClBA,EACAC,IAAOC,IAAI,MAAOH,EAAO,CAAEI,QAAS,IAGpCF,IAAOC,IAAI,MAAOH,IAjBtBK,UAqBJ,WACI,OAAOH,IAAOI,IAAI,OAASJ,IAAOI,IAAI,OAAS,MArB/CC,OAwBJ,WACIL,IAAOM,OAAO,OACdN,IAAOM,OAAO,YACdN,IAAOM,OAAO,SACdN,IAAOM,OAAO,OA3BdC,gBA8BJ,WACI,QAAOP,IAAOI,IAAI,QA9BlBI,aAiCJ,SAAsBC,GAClBT,IAAOC,IAAI,WAAYQ,EAASC,SAAU,CAAER,QAAS,IACrDF,IAAOC,IAAI,QAASQ,EAASE,MAAO,CAAET,QAAS,IAC/CF,IAAOC,IAAI,KAAMQ,EAASG,GAAI,CAAEV,QAAS,IACzCF,IAAOC,IAAI,mBAAoBQ,EAASI,iBAAkB,CAAEX,QAAS,KApCrEY,cA2CJ,WACI,OAAOd,IAAOI,IAAI,SAAWJ,IAAOI,IAAI,SAAW,MA3CnDW,WA8CJ,WACI,OAAOf,IAAOI,IAAI,MAAQJ,IAAOI,IAAI,MAAQ,MA9C7CY,aAqCJ,WACI,OAAOhB,IAAOI,IAAI,YAAcJ,IAAOI,IAAI,YAAc,MArCzDa,0BAgDJ,WACI,OAAOjB,IAAOI,IAAI,oBAAsBJ,IAAOI,IAAI,oBAAsB,MAhDzEc,sBAmDJ,SAA+BL,GAE3Bb,IAAOC,IAAI,mBAAoBY,EAAkB,CAAEX,QAAS,MCejDiB,MAzBf,WACI,OACI,gCACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,UAAUC,OAAO,MAAMC,OAAO,MACpD,kBAACJ,EAAA,EAAOK,MAAR,CAAeC,GAAIC,IAAMC,GAAG,gBAA5B,KAA6C,yBACrDC,IAAI,GACJC,IAAMC,6DACNC,MAAM,KACNC,OAAO,KACPC,UAAU,6BACT,IANO,cAOA,kBAACd,EAAA,EAAOe,OAAR,CAAeC,gBAAc,qBAC7B,kBAAChB,EAAA,EAAOiB,SAAR,CAAiBzB,GAAG,oBA3BK,MAAjChB,EAAeoB,gBAA0BpB,EAAeW,kBAEpD,kBAAC+B,EAAA,EAAD,CAAKJ,UAAU,WACX,kBAACI,EAAA,EAAIX,KAAL,CAAUD,GAAIC,IAAMC,GAAG,WAAvB,iBACA,kBAACU,EAAA,EAAIX,KAAL,CAAUD,GAAIC,IAAMC,GAAG,gBAAvB,iBACA,kBAACU,EAAA,EAAIX,KAAL,CAAUD,GAAIC,IAAMC,GAAG,kBAAvB,qBACA,kBAACU,EAAA,EAAIX,KAAL,CAAUD,GAAIC,IAAMC,GAAG,sBAAvB,sBAKD,KAkBK,kBAACU,EAAA,EAAD,CAAKJ,UAAU,uBACf,kBAACI,EAAA,EAAIX,KAAL,CAAUO,UAAU,OAAOR,GAAIC,IAAMC,GAAG,UAAxC,eA5CqB,MAAjChC,EAAeoB,gBAA0BpB,EAAeW,kBAEpD,kBAACa,EAAA,EAAOmB,KAAR,CAAaL,UAAU,aAAvB,SACWtC,EAAeoB,eAAgB,KAKvC,KA5Bf,WACI,IAAIwB,EAAUC,cACd,OAAO7C,EAAeW,kBAElB,kBAAC+B,EAAA,EAAIX,KAAL,CACIe,QAAS,WACL9C,EAAeS,QAAO,kBAAMmC,EAAQG,KAAK,SAG7CjB,GAAIC,IAAMC,GAAG,UALjB,WASI,kBAACU,EAAA,EAAIX,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UAAvB,oBAqDagB,Q,sGCtEZC,EAAc,CACvBC,UAGJ,WAGI,MAFiB,UAAYlD,EAAeO,cCJzC,IAAM4C,EAAY,CACrBC,S,kDACAC,M,8CACAC,Y,2CACAC,S,6CAGEC,EAAUrB,wC,4CAEhB,WAAwBsB,EAAOC,EAAUC,EAAUC,GAAnD,eAAAC,EAAA,6DAEUC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEV,QAAOC,WAAUC,WAAUC,qBAL1D,SAQiBQ,MAAMZ,EAAU,wBAAyBM,GACjDO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASE,OAFLC,QAAQC,OAAOJ,MAK7BK,MATQ,uCASF,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATE,uDARjB,oF,kEAwBA,WAAqBC,EAAUC,GAA/B,iBAAAjB,EAAA,6DAEQI,EAAO,IAAIc,iBACVC,OAAO,aAAc,YAC1Bf,EAAKe,OAAO,WAAYH,GACxBZ,EAAKe,OAAO,WAAYF,GAElBhB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,KAAMA,GAVd,SAaiBG,MAAMZ,EAAU,SAAUM,GAClCO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATQ,uCASF,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATE,uDAbjB,oF,kEA6BA,8BAAAf,EAAA,6DAEQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBARZ,SAYiBd,MAAMZ,EAAU,YAAaM,GACrCO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATQ,uCASF,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATE,uDAZjB,oF,kEA4BA,WAAwBO,GAAxB,yBAAAtB,EAAA,6DAEQqB,EAAgBjC,EAAYC,YAE5BkC,EAAKpF,EAAemB,aACpBuC,EAAW1D,EAAeoB,eAC1BqC,EAAQzD,EAAekB,iBAEvBmE,EAAW,IAAIC,UACVN,OAAO,KAAMI,GACtBC,EAASL,OAAO,WAAYtB,GAC5B2B,EAASL,OAAO,QAASvB,GACzB4B,EAASL,OAAO,mBAAoBG,GAE9BrB,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACLkB,iBAEJjB,KAAMoB,GAnBd,UAsBiBjB,MAAMZ,EAAO,oBAAgB4B,GAAMtB,GAC/CO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASE,OAFLC,QAAQC,OAAOJ,MAK7BK,MATY,uCASN,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATM,uDAtBjB,sF,0BCkFeW,E,kDAxKX,aAAe,IAAD,8BACV,gBA2BJC,qBAAuB,SAAAC,GAAK,OAC5B,EAAKC,SAAS,CAAEC,WAAYF,EAAMG,OAAOC,WA3BrC,EAAKC,MAAQ,CACTC,MAAO,GACPpC,SAAU,GACVgC,YAAY,EACZK,YAAa,GACbC,iBAAiB,EACjBC,UAAU,GAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKZ,qBAAuB,EAAKA,qBAAqBY,KAA1B,gBAZlB,E,gEAgBNpG,EAAeW,mBACf2F,KAAKZ,SAAS,CAAEQ,UAAU,M,mCAIrBT,GAAQ,IAAD,EACQA,EAAMG,OAAtBW,EADQ,EACRA,KAAMC,EADE,EACFA,MACdF,KAAKZ,SAAL,eACKa,EAAOC,M,mCAOHf,GAAQ,IAAD,OAChBa,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpB9C,EAAUE,MAAMiD,KAAKR,MAAMC,MAAOO,KAAKR,MAAMnC,UACnDU,MAAK,SAAAoC,GACRC,QAAQC,IAAI,cACZ,EAAKjB,SAAS,CAAEM,YAAa,KAC7B,EAAKN,SAAS,CAAEO,iBAAiB,IAEjCjG,EAAeC,UAAUwG,EAAKG,aAAc,EAAKd,MAAMH,YACvD,EAAKrC,iBAEJqB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,OAK5Ba,EAAMuB,mB,oCAGK,IAAD,OACG7D,EAAUG,cAEhBe,MAAK,SAAAoC,GACRC,QAAQC,IAAI,iCACZ3G,EAAeY,aAAa6F,GAC5B,EAAKf,SAAS,CAAEQ,UAAU,OAEzBvB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,S,qCAO5B,OAAI0B,KAAKR,MAAMG,gBAEP,yBAAKgB,MAAM,iCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBAMkB,IAA1BgE,KAAKR,MAAME,YAEP,kBAACqB,EAAA,EAAD,CAAO/E,UAAU,mBAAmBb,QAAQ,UAC3C6E,KAAKR,MAAME,aAKT,O,+BAMf,OAA4B,IAAxBM,KAAKR,MAAMI,SACJ,kBAAC,IAAD,CAAUlE,GAAG,iBAIpB,yBAAKiF,MAAM,aACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,OACP,kBAACK,EAAA,EAAD,CAAMC,SAAUjB,KAAKD,cACjB,wBAAI/D,UAAU,8BAAd,aAECgE,KAAKkB,eAEN,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,aAClB,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOC,UAAQ,EAACC,YAAY,cAAcxB,KAAK,QAAQyB,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMC,SAG7H,kBAACuB,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBAClB,kBAACJ,EAAA,EAAKK,MAAN,mBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWC,UAAQ,EAACC,YAAY,WAAWxB,KAAK,WAAWyB,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMnC,YAGjI,kBAAC2D,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBAClB,kBAACJ,EAAA,EAAKW,MAAN,CAAYJ,KAAK,WAAWK,MAAM,kBAAa3B,KAAK,aAAayB,SAAU1B,KAAKd,qBAAsBK,QAASS,KAAKR,MAAMH,cAG9H,yBAAKsB,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,UAAUoG,KAAK,UAA/B,eAOhB,wBAAIvF,UAAU,yBAAd,iDACA,yBAAK2E,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,kBAAkBK,GAAIC,IAAMC,GAAG,aAA/C,qB,GAjKIoG,a,YC8BTC,I,QCjCFC,EAAqB,CAC9BC,wB,8CACAC,c,4CACAC,c,4CACAC,a,oDACAC,c,4CACAC,W,0DACAC,iB,8CACAC,qB,+CAGEtF,EAAUrB,wC,4CAEhB,WAA6BiD,GAA7B,iBAAAvB,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWiBd,MAAMZ,EAAO,uBAAmB4B,GAAMtB,GAC9CO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATQ,uCASF,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATE,uDAXjB,oF,kEA2BA,WAAuCmE,EAAUC,GAAjD,iBAAAnF,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWkBd,MAAMZ,EAAO,0CAAsCuF,EAAtC,YAAkDC,GAAclF,GACtFO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDAXlB,oF,kEA2BA,WAAgCmE,EAAUC,GAA1C,iBAAAnF,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWkBd,MAAMZ,EAAO,wCAAoCuF,EAApC,YAAgDC,GAAclF,GACpFO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDAXlB,oF,kEA0BA,WAAoCmE,EAAUC,GAA9C,iBAAAnF,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWkBd,MAAMZ,EAAO,4CAAwCuF,EAAxC,YAAoDC,GAAclF,GACxFO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASW,OAFLR,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDAXlB,oF,kEA2BA,WAA6B5D,GAA7B,iBAAA6C,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWkBd,MAAMZ,EAAO,gCAA4BxC,GAAM8C,GACxDO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAAS2E,OAFLxE,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDAXlB,oF,kEA2BA,WAA6B5D,GAA7B,iBAAA6C,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE1BY,EAAiB,CACnBC,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChBkB,kBAPZ,SAWkBd,MAAMZ,EAAO,uBAAmBxC,GAAM8C,GAC/CO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASE,OAFLC,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDAXlB,oF,kEA2BA,WAA4BsE,EAAYC,EAAcC,EAAgBC,EAAOC,GAA7E,qBAAAzF,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE5BqG,EAAcH,EAAeI,KAAK,MAElCnE,EAAW,IAAIC,UACVN,OAAO,OAAQkE,GACxB7D,EAASL,OAAO,cAAemE,GAC/B9D,EAASL,OAAO,cAAeuE,GAC/BlE,EAASL,OAAO,QAASqE,GACzBhE,EAASL,OAAO,WAAYsE,GAEtBxF,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACLkB,iBAEJjB,KAAMoB,GAjBd,UAoBkBjB,MAAMZ,EAAU,gBAAiBM,GAC1CO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASE,OAFLC,QAAQC,OAAOJ,MAK7BK,MATS,uCASH,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATG,uDApBlB,sF,kEAmCA,WAA0B5D,EAAIyI,EAAUP,EAAYC,EAAcC,EAAgBC,EAAOK,EAAaJ,GAAtG,qBAAAzF,EAAA,6DACQqB,EAAgBjC,EAAYC,YAE5BqG,EAAcH,EAAeI,KAAK,MAElCnE,EAAW,IAAIC,UACVN,OAAO,OAAQkE,GACxB7D,EAASL,OAAO,cAAemE,GAC/B9D,EAASL,OAAO,cAAeuE,GAC/BlE,EAASL,OAAO,QAASqE,GACzBhE,EAASL,OAAO,cAAe0E,GAC/BrE,EAASL,OAAO,WAAYyE,GAC5BpE,EAASL,OAAO,WAAYsE,GAEtBxF,EAAiB,CACnBC,OAAQ,MACRC,QAAS,CACLkB,iBAEJjB,KAAMoB,GAnBd,UAsBiBjB,MAAMZ,EAAO,uBAAmBxC,GAAM8C,GAC9CO,MAAK,SAAAC,GAEF,OAAKA,EAASC,GAGPD,EAASE,OAFLC,QAAQC,OAAOJ,MAK7BK,MATQ,uCASF,WAAML,GAAN,eAAAT,EAAA,sEACiBS,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIA,KAD9C,cACGI,EADH,yBAEIH,QAAQC,OAAOE,IAFnB,2CATE,uDAtBjB,sF,kDC4Re+E,E,kDAveX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACD9D,MAAQ,CACTG,iBAAiB,EACjB4D,yBAA0B,OAC1B7D,YAAa,GACb2D,QAAS,GACTG,SAAU,EACVC,aAAa,EACbhB,SAAW,GACXiB,WAAa,EACbC,sBAAwB,EACxBC,wBAA0B,EAC1BC,4BAA8B,GAGlC,EAAKC,aAAe,EAAKA,aAAahE,KAAlB,gBACpB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAjBD,E,sEAqBOkE,GACvBhE,KAAKiE,c,0CAKJjE,KAAKiE,c,iDAIkB9D,GAEvB,IAAI+D,EAAWC,OAAOC,SAASC,KAE/BlE,EAAKmE,SAAQ,SAAUC,GACnBA,EAAQC,iBAAkB,GACvBD,EAAQvB,UAAYuB,EAAQ/J,WAAad,EAAeoB,gBAAgC,oBAAboJ,GAA+C,kBAAbA,GAA4C,OAAbA,GAAkC,MAAbA,EAKhKK,EAAQC,iBAAkB,EAH1BD,EAAQC,iBAAkB,O,qDAQPrE,GAE3B,IAAI+D,EAAWC,OAAOC,SAASC,KAC3BI,EAAa/K,EAAeqB,4BAEhCoF,EAAKmE,SAAQ,SAAUC,GACnBA,EAAQG,oBAAqB,EACb,oBAAbR,GAAkCO,EAAWE,SAASJ,EAAQK,UAE7DL,EAAQG,oBAAqB,EAG7BH,EAAQM,qBAAsB,O,kCAOtC,IACI,IAAIX,EAAWC,OAAOC,SAASC,KAE/BS,EAAiB9E,KAAKsD,MAAMc,SAASW,aACrCC,EAAmBhF,KAAKsD,MAAMc,SAASa,eACvCC,EAAuBlF,KAAKsD,MAAMc,SAASe,mBAW1C,QATgBC,GAAlBN,GACH9E,KAAKZ,SAAS,CAAEuE,sBAAuBmB,SAEhBM,GAApBJ,GACHhF,KAAKZ,SAAS,CAAEwE,wBAAyBoB,SAEdI,GAAxBF,GACHlF,KAAKZ,SAAS,CAAEyE,4BAA6BqB,IAEvB,oBAAbhB,EAAgC,CACjC,IAAImB,EAAarF,KAAKsD,MAAMc,SAASa,oBACnBG,IAAfC,IACHA,EAAarF,KAAKR,MAAMoE,yBAEvB5D,KAAKZ,SAAS,CAAEwE,wBAAyByB,IACzCrF,KAAKZ,SAAS,CAAEmE,yBAA0B,WAC1CvD,KAAKsF,kBAAkBtF,KAAKR,MAAMiD,SAAU4C,QAE3C,GAAgB,kBAAbnB,EAA8B,CACnC,IAAImB,EAAarF,KAAKsD,MAAMc,SAASW,kBACnBK,IAAfC,IACHA,EAAarF,KAAKR,MAAMmE,uBAExB3D,KAAKZ,SAAS,CAAEuE,sBAAuB0B,IACtCrF,KAAKZ,SAAS,CAAEmE,yBAA0B,SAC1CvD,KAAKuF,gBAAgBvF,KAAKR,MAAMiD,SAAU4C,QAEzC,GAAgB,wBAAbnB,EAAoC,CACzC,IAAImB,EAAarF,KAAKsD,MAAMc,SAASe,wBACnBC,IAAfC,IACHA,EAAarF,KAAKR,MAAMqE,6BAExB7D,KAAKZ,SAAS,CAAEyE,4BAA6BwB,IAC5CrF,KAAKZ,SAAS,CAAEmE,yBAA0B,eAC1CvD,KAAKwF,sBAAsBxF,KAAKR,MAAMiD,SAAU4C,QAGjDrF,KAAKZ,SAAS,CAAEmE,yBAA0B,SAC1CvD,KAAKuF,gBAAgBvF,KAAKR,MAAMiD,SAAUzC,KAAKR,MAAMmE,uBAI1D,MAAOrF,GACL0B,KAAKZ,SAAS,CAAEmE,yBAA0B,SAC1CvD,KAAKuF,gBAAgBvF,KAAKR,MAAMiD,SAAUzC,KAAKR,MAAMmE,0B,sCAI9ClB,EAAUC,GAAa,IAAD,OAClC1C,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpBqC,EAAmBC,wBAAwBQ,EAAUC,GAE3D3E,MAAK,SAAAoC,GACRC,QAAQC,IAAI,iCACZ,EAAKoF,2BAA2BtF,GAChC,EAAKf,SAAS,CAAEiE,QAASlD,IACzB,EAAKf,SAAS,CAAEO,iBAAiB,IAE9BQ,EAAKuF,OAAS,EAEb,EAAKtG,SAAS,CAACsE,WAAavD,EAAK,GAAGwF,aAGpC,EAAKvG,SAAS,CAACsE,WAAa,IAGhC,EAAKkC,gCAAgClD,GACrC,EAAKmD,yBAEJxH,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA,EAAKc,SAAS,CAAEM,YAAa,oCAC7BU,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,U,wCAOnC8C,EAAUC,GAAa,IAAD,OACpC1C,KAAKZ,SAAS,CAAEO,iBAAiB,IAEjCK,KAAK8F,eAEQ9D,EAAmBO,iBAAiBE,EAAUC,GAEpD3E,MAAK,SAAAoC,GACRC,QAAQC,IAAI,iCACZ,EAAKoF,2BAA2BtF,GAChC,EAAK4F,+BAA+B5F,GACpC,EAAKf,SAAS,CAAEiE,QAASlD,IACzB,EAAKf,SAAS,CAAEO,iBAAiB,IAE9BQ,EAAKuF,OAAS,EAEb,EAAKtG,SAAS,CAACsE,WAAavD,EAAK,GAAGwF,aAGpC,EAAKvG,SAAS,CAACsE,WAAa,IAGhC,EAAKkC,gCAAgClD,GACrC,EAAKmD,yBAEJxH,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA,EAAKc,SAAS,CAAEM,YAAa,oCAC7BU,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,U,4CAM/B8C,EAAUC,GAAa,IAAD,OACxC1C,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpBqC,EAAmBQ,qBAAqBC,EAAUC,GAExD3E,MAAK,SAAAoC,GACRC,QAAQC,IAAI,iCAEZ,EAAKjB,SAAS,CAAEiE,QAASlD,IACzB,EAAKf,SAAS,CAAEO,iBAAiB,IAE9BQ,EAAKuF,OAAS,EAEb,EAAKtG,SAAS,CAACsE,WAAavD,EAAK,GAAGwF,aAGpC,EAAKvG,SAAS,CAACsE,WAAa,IAGhC,EAAKkC,gCAAgClD,GACrC,EAAKmD,yBAEJxH,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA,EAAKc,SAAS,CAAEM,YAAa,oCAC7BU,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,U,qCAQpD,IAAD,OACiB9C,EAAUG,cAEhBe,MAAK,SAAAoC,GACRC,QAAQC,IAAI,iCACZ3G,EAAeY,aAAa6F,GAC5B,EAAKf,SAAS,CAAEQ,UAAU,OAEzBvB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,S,4CAO5B,IACI0H,EADAC,EAAOjG,KAIXA,KAAKR,MAAM6D,QAAQiB,SAAQ,SAAU4B,EAAMC,GAEd,OAArBD,EAAKE,aACLF,EAAKG,MAASxK,8DACdoK,EAAK7G,SAAS,CACViE,QAAS4C,EAAKzG,MAAM6D,QAAQiD,KAAI,SAAAC,GAAE,OAAKA,EAAG3B,WAAasB,EAAKtB,SAArB,eAAqC2B,EAArC,CAAyCL,SAASK,QAIhFvE,EAAmBE,cAAcgE,EAAKE,aAC5CrI,MAAK,SAAAoC,GACR6F,EAAUQ,IAAIC,gBAAgBtG,GAC9B+F,EAAKG,MAAQL,EACbC,EAAK7G,SAAS,CACViE,QAAS4C,EAAKzG,MAAM6D,QAAQiD,KAAI,SAAAC,GAAE,OAAKA,EAAG3B,WAAasB,EAAKtB,SAArB,eAAqC2B,EAArC,CAAyCL,SAASK,OAE7FN,EAAK7G,SAAS,CAAEO,iBAAiB,OAGhCtB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ4F,EAAK7G,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChBwF,EAAK7G,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ2H,EAAK7G,SAAS,CAAEO,iBAAiB,a,qCAS3D,GAA2C,SAAxCK,KAAKR,MAAM+D,yBACd,CAEE,IAAImD,EAAa1G,KAAKR,MAAMmE,sBAE5B3D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAEhD,sBAAuBgD,EAAUhD,sBAAwB,MACrF3D,KAAKuF,gBAAgBvF,KAAKR,MAAMiD,SAAUiE,EAAa,QAEtD,GAA2C,WAAxC1G,KAAKR,MAAM+D,yBAAsC,CAEvD,IAAImD,EAAa1G,KAAKR,MAAMoE,wBAE5B5D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAE/C,wBAAyB+C,EAAU/C,wBAA0B,MACzF5D,KAAKsF,kBAAkBtF,KAAKR,MAAMiD,SAAUiE,EAAa,QAE1D,GAA2C,eAAxC1G,KAAKR,MAAM+D,yBAA0C,CAEzD,IAAImD,EAAa1G,KAAKR,MAAMqE,4BAE5B7D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAE9C,4BAA6B8C,EAAU9C,4BAA8B,MACjG7D,KAAKwF,sBAAsBxF,KAAKR,MAAMiD,SAAUiE,EAAa,M,iCAM/D,GAA2C,SAAxC1G,KAAKR,MAAM+D,yBACd,CAEI,IAAImD,EAAa1G,KAAKR,MAAMmE,sBAE5B3D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAEhD,sBAAuBgD,EAAUhD,sBAAwB,MACvF3D,KAAKuF,gBAAgBvF,KAAKR,MAAMiD,SAAUiE,EAAa,QAEtD,GAA2C,WAAxC1G,KAAKR,MAAM+D,yBAAsC,CACrD,IAAImD,EAAa1G,KAAKR,MAAMoE,wBAE5B5D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAE/C,wBAAyB+C,EAAU/C,wBAA0B,MAC3F5D,KAAKsF,kBAAkBtF,KAAKR,MAAMiD,SAAUiE,EAAa,QAExD,GAA2C,eAAxC1G,KAAKR,MAAM+D,yBAA0C,CAEzD,IAAImD,EAAa1G,KAAKR,MAAMqE,4BAE5B7D,KAAKZ,UAAS,SAAAuH,GAAS,MAAK,CAAE9C,4BAA6B8C,EAAU9C,4BAA8B,MACnG7D,KAAKwF,sBAAsBxF,KAAKR,MAAMiD,SAAUiE,EAAa,M,sDAIrCrB,GAExBA,GAAc,EAEdrF,KAAKZ,SAAS,CAACqE,aAAc,IAI7BzD,KAAKZ,SAAS,CAACqE,aAAc,IAG7B4B,GAAcrF,KAAKR,MAAMkE,WAEzB1D,KAAKZ,SAAS,CAACoE,SAAU,IAIzBxD,KAAKZ,SAAS,CAACoE,SAAU,M,+BAIvB,IAAD,OACL,GAAIxD,KAAKR,MAAMG,gBACX,OAEI,yBAAKgB,MAAM,wCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBAIT,GAA8B,IAA1BgE,KAAKR,MAAME,YAClB,OACI,kBAACqB,EAAA,EAAD,CAAO/E,UAAU,mBAAmBb,QAAQ,UACvC6E,KAAKR,MAAME,aAMpB,IAAMkH,EAAU5G,KAAKR,MAAM6D,QAAQiD,KAAI,SAAAJ,GACnC,OACI,kBAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGzL,GAAIC,IAAMC,GACvC,CACIwL,SAAS,kBAAD,OAAoBhB,EAAKtB,UACjCuC,YAAajB,EACbkB,8BAA+B,EAAK5H,MAAM+D,yBAC1CwB,aAAc,EAAKvF,MAAMmE,sBACzBsB,eAAgB,EAAKzF,MAAMoE,wBAC3BuB,mBAAoB,EAAK3F,MAAMqE,6BAElC7H,UAAYkK,EAAK1B,gBAAkB,eAAiB0B,EAAKxB,mBAAqB,kBAAoB,eAAgByB,IAAKD,EAAKtB,UAE7H,yBAAK5I,UAAU,qBACX,yBAAK2E,MAAM,iCACP,yBAAK/E,IAAKsK,EAAKG,SAEnB,uBAAGrK,UAAU,eAAb,IAA6BkK,EAAKjG,WAMlD,OACI,kBAACoH,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKvL,UAAU,0BACV4K,EAED,kBAACC,EAAA,EAAD,CAAKE,GAAI,IACT,yBAAK/K,UAAU,sCACf,kBAAC6F,EAAA,EAAD,CAAQ7F,UAAU,OAAOb,QAAQ,UAAUqM,KAAK,KAAKC,UAAWzH,KAAKR,MAAMiE,YAAajH,QAASwD,KAAK8D,cAAtG,QACA,uBAAG9H,UAAU,SACX,WACE,OAAQ,EAAKwD,MAAM+D,0BACnB,IAAK,OAAU,MAAO,UAAY,EAAK/D,MAAMmE,sBAAwB,MAAQ,EAAKnE,MAAMkE,WACxF,IAAK,SAAU,MAAO,UAAY,EAAKlE,MAAMoE,wBAA0B,MAAQ,EAAKpE,MAAMkE,WAC1F,IAAK,aAAe,MAAO,UAAY,EAAKlE,MAAMqE,4BAA8B,MAAQ,EAAKrE,MAAMkE,WACnG,QAAc,MAAO,UAAY,EAAKlE,MAAMmE,sBAAwB,MAAQ,EAAKnE,MAAMkE,YALzF,IASd,kBAAC7B,EAAA,EAAD,CAAQ1G,QAAQ,UAAUqM,KAAK,KAAKC,UAAWzH,KAAKR,MAAMgE,QAAShH,QAASwD,KAAK+D,UAAjF,gB,GAxdUjC,a,QCsYP4F,E,kDAnYX,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAED9D,MAAQ,CACTmI,KAAM,GACN9E,aAAc,GACdI,YAAa,GACbF,MAAO,GACPqD,YAAa,GACbwB,GAAI,GACJ5E,UAAU,EACVxI,SAAU,GACVqN,WAAW,EACXC,eAAe,EACfnI,iBAAiB,EACjBD,YAAa,GACbqI,UAAY,GACZC,SAAU,IACVC,aAAa,GAGjB,EAAKC,iBAAmB,EAAKA,iBAAiBpI,KAAtB,gBACxB,EAAKqI,gBAAkB,EAAKA,gBAAgBrI,KAArB,gBACvB,EAAKsI,mBAAqB,EAAKA,mBAAmBtI,KAAxB,gBAC1B,EAAKuI,qBAAuB,EAAKA,qBAAqBvI,KAA1B,gBAxBb,E,gEA2BE,IAAD,OAGhBM,QAAQC,IAAIL,KAAKsD,MAAMgF,MAAMC,OAAO7N,IACpC,IACIsF,KAAKZ,SAAS,CAAEuI,KAAM3H,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKjG,OAC3DD,KAAKZ,SAAS,CAAEyD,aAAc7C,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKsC,cACnExI,KAAKZ,SAAS,CAAE6D,YAAajD,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKuC,cAClEzI,KAAKZ,SAAS,CAAE2D,MAAO/C,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKG,QAC5DrG,KAAKZ,SAAS,CAAEwI,GAAI5H,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKtB,WACzD5E,KAAKZ,SAAS,CAAEgH,YAAapG,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKE,cAClEpG,KAAKZ,SAAS,CAAE4D,SAAUhD,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKlD,WAC/DhD,KAAKZ,SAAS,CAAE5E,SAAUwF,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAK1L,WAC/DwF,KAAKZ,SAAS,CAAEsJ,aAAe1I,KAAKsD,MAAMc,SAASW,eACnD/E,KAAKZ,SAAS,CAAEuJ,eAAiB3I,KAAKsD,MAAMc,SAASa,iBACrDjF,KAAKZ,SAAS,CAAEwJ,mBAAqB5I,KAAKsD,MAAMc,SAASe,qBAExCzL,EAAeqB,4BAElB4J,SAAS3E,KAAKsD,MAAMc,SAAS+C,YAAYjB,KAAKtB,WACxD5E,KAAKZ,SAAS,CAAE6I,aAAc,IAGW,SAAtDjI,KAAKsD,MAAMc,SAASgD,8BAEnBpH,KAAKZ,SAAS,CAAE2I,UAAW,iBAEgC,WAAtD/H,KAAKsD,MAAMc,SAASgD,8BAEzBpH,KAAKZ,SAAS,CAAE2I,UAAW,mBAG3B/H,KAAKZ,SAAS,CAAE2I,UAAW,uBAErB,MAAOzJ,GACL0B,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpBqC,EAAmBK,cAAcrC,KAAKsD,MAAMgF,MAAMC,OAAO7N,IAC/DqD,MAAK,SAAAoC,GACRC,QAAQC,IAAI,oBACZ,EAAKjB,SAAS,CAAEuI,KAAMxH,EAAKF,OAC3B,EAAKb,SAAS,CAAEyD,aAAc1C,EAAKqI,cACnC,EAAKpJ,SAAS,CAAE6D,YAAa9C,EAAKsI,cAClC,EAAKrJ,SAAS,CAAEgH,YAAajG,EAAKiG,cAClC,EAAKhH,SAAS,CAAEwI,GAAIzH,EAAKyE,WACzB,EAAKxF,SAAS,CAAE4D,SAAU7C,EAAK6C,WAC/B,EAAK5D,SAAS,CAAE5E,SAAU2F,EAAK3F,WAE/B,EAAK4E,SAAS,CAAE2I,UAAW,iBAEVrO,EAAeqB,4BAElB4J,SAASxE,EAAKyE,WACxB,EAAKxF,SAAS,CAAE6I,aAAc,IAGlC,EAAK7I,SAAS,CAAEO,iBAAiB,IACjC,EAAKkG,yBAEJxH,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,W,4CAOlC,IAEfqG,EAFc,OAIa,OAA3BhG,KAAKR,MAAM4G,YACXpG,KAAKZ,SAAS,CAAE2D,MAAOlH,iEAIvBmE,KAAKZ,SAAS,CAAEO,iBAAiB,IACpBqC,EAAmBE,cAAclC,KAAKR,MAAM4G,aAClDrI,MAAK,SAAAoC,GACRC,QAAQC,IAAI,mBACZ2F,EAAUQ,IAAIC,gBAAgBtG,GAC9B,EAAKf,SAAS,CAAE2D,MAAOiD,IACvB,EAAK5G,SAAS,CAAEO,iBAAiB,OAEhCtB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,W,sCAQzCR,GACZa,KAAKZ,SAAS,CAAEyI,WAAW,M,uCAId1I,GACba,KAAKZ,SAAS,CAAEyI,WAAW,M,2CAIV1I,GAAQ,IAAD,OAEpB0J,GAAsB,EACtBpE,EAAa/K,EAAeqB,4BAC5B+N,EAAelL,KAAK4C,MAAMiE,GAE9B,GAAGzE,KAAKR,MAAMyI,YAAY,CACtBY,GAAsB,EAEtB,IAAME,EAAQD,EAAaE,QAAQhJ,KAAKR,MAAMoI,IAC1CmB,GAAS,GACTD,EAAaG,OAAOF,EAAO,QAI/BF,GAAsB,EAEtBC,EAAarM,KAAKuD,KAAKR,MAAMoI,IAGjC,IAAIsB,EAAgBJ,EAAa5F,KAAK,KAEpBrG,EAAUI,SAASiM,GAE1BnL,MAAK,SAAAoC,GACL0I,GACCzI,QAAQC,IAAI,+BACZ,EAAKjB,SAAS,CAAE6I,aAAc,MAG9B7H,QAAQC,IAAI,yBACZ,EAAKjB,SAAS,CAAE6I,aAAc,KAGlCvO,EAAesB,sBAAsB8N,MAGpCzK,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,wCAGZ,IACI,IAAIE,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAGpB,MAAOnC,GACH8B,QAAQC,IAAI/B,S,kCASxBgF,GACR,OACI,kBAAC6F,EAAA,EAAD,iBACQ7F,EADR,CAEIkE,KAAK,KACL4B,UAAQ,IAER,kBAACD,EAAA,EAAMlO,OAAP,CAAcoO,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,CAAa5O,GAAG,iCACX4I,EAAMrD,OAGf,kBAACkJ,EAAA,EAAMI,KAAP,KACI,uHAIJ,kBAACJ,EAAA,EAAMK,OAAP,KACI,kBAAC3H,EAAA,EAAD,CAAQ1G,QAAQ,SAASqB,QAAS8G,EAAMmG,QAAxC,aACA,kBAAC5H,EAAA,EAAD,CAAQ1G,QAAQ,OAAOqB,QAAS8G,EAAMoG,QAAtC,c,yCAMGvK,GAAQ,IAAD,OACT6C,EAAmBG,cAAcnC,KAAKR,MAAMoI,IAElD7J,MAAK,SAAAoC,GACRC,QAAQC,IAAI,kBACZ,EAAKjB,SAAS,CAAE0I,eAAe,OAE9BzJ,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,wCAGZ,IACI,IAAIE,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAGpB,MAAOnC,GACH8B,QAAQC,IAAI/B,S,+BAS5B,IAAiC,IAA7B0B,KAAKR,MAAMsI,cACX,OAAO,kBAAC,IAAD,CAAUpM,GAAG,aAGxB,IAAIiO,EACAC,EACAC,EACAC,EAEC9J,KAAKR,MAAMwD,UAAYhD,KAAKR,MAAMhF,WAAad,EAAeoB,gBAc/D6O,EAAa,KACbC,EAAe,KAEnBC,EAAa,uBAAI7N,UAAU,eAAd,mBAA6CgE,KAAKR,MAAMhF,UAErEsP,EAAmB,kBAACjI,EAAA,EAAD,CAAQrF,QAASwD,KAAKqI,qBAAsBb,KAAK,KAAKrM,QAAQ,kBAAkBa,UAAU,8BAA1F,IAAwH,yBAAKA,UAAU,oBACzJJ,IAAMoE,KAAKR,MAAMyI,YAAcpM,yDAAoDA,4DADjE,OAlBZ8N,EAAc,kBAAC9H,EAAA,EAAD,CAAQ2F,KAAK,KAAKrM,QAAQ,eAAea,UAAU,iCAAiCR,GAAIC,IAAMC,GAC/G,CACIwL,SAAS,SAAD,OAAWlH,KAAKR,MAAMoI,IAC9BT,YAAanH,KAAKR,QAHL,UAMjBoK,EAAgB,kBAAC/H,EAAA,EAAD,CAAQrF,QAASwD,KAAKmI,gBAAiBX,KAAK,KAAKrM,QAAQ,iBAAiBa,UAAU,8BAApF,aAEhB6N,EAAa,KACbC,EAAkB,MActB,IAAMrB,EAAczI,KAAKR,MAAMyD,YAAYqD,KAAI,SAAAJ,GAAI,OAC/C,4BACKA,MAGT,OAAIlG,KAAKR,MAAMG,gBAGP,yBAAKgB,MAAM,wCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBAIoB,IAA1BgE,KAAKR,MAAME,YAGjB,kBAACqB,EAAA,EAAD,CAAO/E,UAAU,mBAAoBb,QAAQ,UAC5C6E,KAAKR,MAAME,aAOR,6BACI,kBAAC2H,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKE,GAAI,IACL,wBAAI/K,UAAU,yBAAyBgE,KAAKR,MAAMmI,OAGtD,kBAACd,EAAA,EAAD,CAAKE,GAAI,IACL,uBAAG/K,UAAU,aAAcgE,KAAKR,MAAMqD,eAG1C,kBAACgE,EAAA,EAAD,CAAKE,GAAI,EAAG/K,UAAU,qBAClB,4BACKyM,IAIT,kBAAC5B,EAAA,EAAD,CAAKE,GAAI,GACL,yBAAK/K,UAAU,4BAA4BJ,IAAKoE,KAAKR,MAAMuD,SAG/D,kBAAC8D,EAAA,EAAD,KACI,kBAAChF,EAAA,EAAD,CAAQ2F,KAAK,KAAKrM,QAAQ,eAAea,UAAU,iCAAiCR,GAAIC,IAAMC,GAC1G,CACIwL,SAAUlH,KAAKR,MAAMuI,UACrBhD,aAAc/E,KAAKR,MAAMkJ,aACzBzD,eAAgBjF,KAAKR,MAAMmJ,eAC3BxD,mBAAoBnF,KAAKR,MAAMoJ,qBALvB,cASJ,kBAAC/B,EAAA,EAAD,CAAK7K,UAAU,qBACX2N,EACAE,GAGJ,kBAAChD,EAAA,EAAD,KACI+C,EACAE,KAMZ,uBAAMC,YAAN,CACIC,KAAMhK,KAAKR,MAAMqI,UACjB6B,OAAQ1J,KAAKkI,iBACbjI,KAAMD,KAAKR,MAAMmI,KACjB8B,OAAQzJ,KAAKoI,0B,GA3XTtG,a,SCsBbmI,OA5Bf,WACC,IAAD,EACwCC,qBADxC,oBACWC,EADX,KACuBC,EADvB,KAOI,OAFAC,qBAAU,WAAOD,EAFOvO,YAKpB,yBAAKG,UAAU,OACf,4BAAQA,UAAU,cAChB,yBAAKJ,IAAOC,+DACZ,uCACWsO,GAEX,uBACEnO,UAAU,WACVsO,KAAK,kDACLhL,OAAO,SACPiL,IAAI,uBAJN,aC2JKC,I,oEArKX,aAAe,IAAD,8BACV,gBACKhL,MAAQ,CACTrC,MAAO,GACPsC,MAAO,GACPpC,SAAU,GACVC,gBAAiB,GACjBoC,YAAa,GACb+K,oBAAoB,EACpB9K,iBAAiB,GAErB,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAZV,E,yDAeDX,GAAQ,IAAD,EACQA,EAAMG,OAAtBW,EADQ,EACRA,KAAMC,EADE,EACFA,MACdF,KAAKZ,SAAL,eACKa,EAAOC,M,mCAIHf,GAAQ,IAAD,OACZa,KAAK0K,gBACL1K,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpB9C,EAAUC,SAASkD,KAAKR,MAAMrC,MAAO6C,KAAKR,MAAMC,MAAOO,KAAKR,MAAMnC,SAAU2C,KAAKR,MAAMlC,iBAC7FS,MAAK,SAAAoC,GACRC,QAAQC,IAAI,yEACZ,EAAKjB,SAAS,CAAEM,YAAa,0EAC7B,EAAKN,SAAS,CAAEqL,oBAAoB,IACpC,EAAKrL,SAAS,CAAEO,iBAAiB,IACjC,EAAKgL,eAEJtM,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEqL,oBAAoB,IACpC,EAAKrL,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEqL,oBAAoB,IACpC,EAAKrL,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,QAKhCa,EAAMuB,mB,oCAIN,IAAIkK,GAAS,EAYb,OAXI5K,KAAKR,MAAMrC,OAAS6C,KAAKR,MAAMC,OAASO,KAAKR,MAAMnC,UAAY2C,KAAKR,MAAMlC,kBAAoB0C,KAAKR,MAAMG,kBACrGK,KAAKR,MAAMnC,WAAa2C,KAAKR,MAAMlC,iBACnCsN,GAAS,EACT5K,KAAKZ,SAAS,CAAEqL,oBAAoB,IACpCzK,KAAKZ,SAAS,CAAEM,YAAa,OAG7BM,KAAKZ,SAAS,CAAEqL,oBAAoB,IACpCzK,KAAKZ,SAAS,CAAEM,YAAa,wCAG9BkL,I,kCAIPC,SAASC,eAAe,gBAAgBC,QAExC/K,KAAKZ,SAAS,CAAEjC,MAAO,KACvB6C,KAAKZ,SAAS,CAAEK,MAAO,KACvBO,KAAKZ,SAAS,CAAE/B,SAAU,KAC1B2C,KAAKZ,SAAS,CAAE9B,gBAAiB,O,wCAIjC,OAAI0C,KAAKR,MAAMG,gBAEP,yBAAKgB,MAAM,iCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBAMkB,IAA1BgE,KAAKR,MAAME,aAAsD,GAAjCM,KAAKR,MAAMiL,mBAGvC,kBAAC1J,EAAA,EAAD,CAAO/E,UAAU,cAAcb,QAAQ,WAClC6E,KAAKR,MAAME,aAIW,IAA1BM,KAAKR,MAAME,aAAsD,GAAjCM,KAAKR,MAAMiL,mBAE5C,kBAAC1J,EAAA,EAAD,CAAO/E,UAAU,mBAAmBb,QAAQ,UACvC6E,KAAKR,MAAME,aAKb,O,+BAMf,OACI,yBAAKiB,MAAM,aACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,OAEP,kBAACK,EAAA,EAAD,CAAMtG,GAAG,eAAeuG,SAAUjB,KAAKD,cACnC,wBAAI/D,UAAU,8BAAd,eAECgE,KAAKgL,kBAEN,kBAAChK,EAAA,EAAKG,MAAN,CAAYC,UAAU,aAClB,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQE,YAAY,QAAQxB,KAAK,QAAQuB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMrC,SAGxH,kBAAC6D,EAAA,EAAKG,MAAN,CAAYC,UAAU,aAClB,kBAACJ,EAAA,EAAKK,MAAN,cACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOE,YAAY,cAAcxB,KAAK,QAAQuB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMC,SAG7H,kBAACuB,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBAClB,kBAACJ,EAAA,EAAKK,MAAN,mBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWE,YAAY,WAAWxB,KAAK,WAAWuB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMnC,YAGjI,kBAAC2D,EAAA,EAAKG,MAAN,CAAYC,UAAU,sBAClB,kBAACJ,EAAA,EAAKK,MAAN,8BACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWE,YAAY,WAAWxB,KAAK,kBAAkBuB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMlC,mBAExI,yBAAKqD,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,UAAUoG,KAAK,UAA/B,mBAOhB,yBAAKZ,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,kBAAkBK,GAAIC,IAAMC,GAAG,SAASM,UAAU,QAAlE,sB,GA9JO8F,c,sCCsZZmJ,G,kDAnZX,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IA2IVpE,qBAAuB,SAAAC,GAAK,OAC5B,EAAKC,SAAS,CAAE4D,SAAU7D,EAAMG,OAAOC,WA1InC,EAAKC,MAAQ,CACT0L,MAAM,EACNxL,YAAa,GACbC,iBAAiB,EACjBwL,WAAW,EACXvI,WAAY,GACZC,aAAc,GACdI,YAAa,GACbmI,iBAAkB,GAClBC,mBAAoB,GACpBrI,UAAU,EACVD,MAAO,KACPuI,aAAc,KACdC,UAAW,GACX3D,GAAI,GACJ4D,mBAAmB,GAGvB,EAAK3L,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAK2L,aAAe,EAAKA,aAAa3L,KAAlB,gBACpB,EAAK4L,oBAAsB,EAAKA,oBAAoB5L,KAAzB,gBAC3B,EAAK6L,kBAAoB,EAAKA,kBAAkB7L,KAAvB,gBACzB,EAAK8L,uBAAyB,EAAKA,uBAAuB9L,KAA5B,gBAC9B,EAAK+L,YAAc,EAAKA,YAAY/L,KAAjB,gBACnB,EAAKZ,qBAAuB,EAAKA,qBAAqBY,KAA1B,gBA5Bb,E,gEA+BE,IAAD,OAChBgM,KAAkBC,OAClB/L,KAAKZ,SAAS,CAAEkM,aAAczP,gEAE9B,IACsC,GAA9BmE,KAAKsD,MAAMgF,MAAMC,OAAO7N,KACxBsF,KAAKZ,SAAS,CAAE8L,MAAM,IAGtBlL,KAAKZ,SAAS,CAAEwD,WAAY5C,KAAKsD,MAAMc,SAAS+C,YAAYQ,OAC5D3H,KAAKZ,SAAS,CAAEyD,aAAc7C,KAAKsD,MAAMc,SAAS+C,YAAYtE,eAC9D7C,KAAKZ,SAAS,CAAE6D,YAAajD,KAAKsD,MAAMc,SAAS+C,YAAYlE,cAC7DjD,KAAKZ,SAAS,CAAE2D,MAAO/C,KAAKsD,MAAMc,SAAS+C,YAAYpE,QACvD/C,KAAKZ,SAAS,CAAEkM,aAActL,KAAKsD,MAAMc,SAAS+C,YAAYpE,QAC9D/C,KAAKZ,SAAS,CAAEmM,UAAWvL,KAAKsD,MAAMc,SAAS+C,YAAYf,cAC3DpG,KAAKZ,SAAS,CAAEwI,GAAI5H,KAAKsD,MAAMc,SAAS+C,YAAYS,KACpD5H,KAAKZ,SAAS,CAAE4D,SAAUhD,KAAKsD,MAAMc,SAAS+C,YAAYnE,YAIhE,MAAO1E,GACL0B,KAAKZ,SAAS,CAAEO,iBAAiB,IAEpBqC,EAAmBK,cAAcrC,KAAKsD,MAAMgF,MAAMC,OAAO7N,IAC/DqD,MAAK,SAAAoC,GACRC,QAAQC,IAAI,mBACZ,EAAKjB,SAAS,CAAEwD,WAAYzC,EAAKF,OACjC,EAAKb,SAAS,CAAEyD,aAAc1C,EAAKqI,cACnC,EAAKpJ,SAAS,CAAE6D,YAAa9C,EAAKsI,cAClC,EAAKrJ,SAAS,CAAEmM,UAAWpL,EAAKiG,cAChC,EAAKhH,SAAS,CAAEwI,GAAIzH,EAAKyE,WACzB,EAAKxF,SAAS,CAAE4D,SAAU7C,EAAK6C,WAE/B,EAAK5D,SAAS,CAAEO,iBAAiB,IACjC,EAAKkG,yBAEJxH,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,W,4CAQlC,IAEfqG,EAFc,OAIW,OAAzBhG,KAAKR,MAAM+L,UACXvL,KAAKZ,SAAS,CAAEkM,aAAczP,iEAI9BmE,KAAKZ,SAAS,CAAEO,iBAAiB,IACpBqC,EAAmBE,cAAclC,KAAKR,MAAM+L,WAClDxN,MAAK,SAAAoC,GACRC,QAAQC,IAAI,mBACZ2F,EAAUQ,IAAIC,gBAAgBtG,GAC9B,EAAKf,SAAS,CAAE2D,MAAOiD,IACvB,EAAK5G,SAAS,CAAEkM,aAActF,IAC9B,EAAK5G,SAAS,CAAEO,iBAAiB,OAEhCtB,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,W,mCAQ5CR,GAAQ,IAAD,EACQA,EAAMG,OAAtBW,EADQ,EACRA,KAAMC,EADE,EACFA,MACdF,KAAKZ,SAAL,eACKa,EAAOC,M,0CAOI8L,GAAI,IAAD,EACuBhM,KAAKR,MAAvC4L,EADW,EACXA,iBAAkBnI,EADP,EACOA,YAEpBgJ,EAAS,uBAAOhJ,GAAP,CAAoBmI,IACnCpL,KAAKZ,SAAS,CAAE6D,YAAagJ,EAAWb,iBAAkB,O,wCAG5CY,GACdhM,KAAKZ,SAAS,CAAEiM,mBAAoBW,EAAE1M,OAAO4M,c,6CAG1BF,GAAI,IAAD,EACsBhM,KAAKR,MAAzCyD,EADc,EACdA,YAAaoI,EADC,EACDA,mBACfY,EAAYhJ,EAAYkJ,QAAO,SAAAC,GAAC,OAAIA,IAAMf,KAChDrL,KAAKZ,SAAS,CAAE6D,YAAagJ,EAAWZ,mBAAoB,O,mCAGnDW,GACThM,KAAKZ,SAAS,CAAEM,YAAa,KAC7B,IAAI2M,EAAWL,EAAE1M,OAAOgN,MAAM,GAAGrM,KAC7BsM,EAAUF,EAASG,MAAM,KAAKC,MAElC,GAAgB,QAAZF,GAAiC,SAAZA,GAAkC,QAAZA,GAAiC,QAAZA,EAAmB,CACnFvM,KAAKZ,SAAS,CAAE2D,MAAOiJ,EAAE1M,OAAOgN,MAAM,KACtCtM,KAAKZ,SAAS,CAAEmM,UAAWc,IAE3B,IAAIK,EAAOV,EAAE1M,OAAOgN,MAAM,GACtBK,EAAS,IAAIC,WACPD,EAAOE,cAAcH,GAE/BC,EAAOG,UAAY,SAAUd,GACzBhM,KAAKZ,SAAS,CACVkM,aAAc,CAACqB,EAAOI,WAE5BjN,KAAKE,WAGPA,KAAKZ,SAAS,CAAEM,YAAa,qC,mCAIxBP,GAAQ,IAAD,OACZa,KAAKmL,cACLnL,KAAKZ,SAAS,CAAEO,iBAAiB,IACjCK,KAAKZ,SAAS,CAAEM,YAAa,KAEzBM,KAAKR,MAAM0L,KACElJ,EAAmBM,WAAWtC,KAAKR,MAAMoI,GAAI5H,KAAKR,MAAMoI,GAAI5H,KAAKR,MAAMoD,WAAY5C,KAAKR,MAAMqD,aAAc7C,KAAKR,MAAMyD,YAAajD,KAAKR,MAAMuD,MAAO/C,KAAKR,MAAM+L,UAAWvL,KAAKR,MAAMwD,UAC7LjF,MAAK,SAAAoC,GACRC,QAAQC,IAAI,0BACZ,EAAKjB,SAAS,CAAEO,iBAAiB,IACjC,EAAKP,SAAS,CAAEoM,mBAAmB,OAElCnN,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,GACZ,EAAKc,SAAS,CAAEO,iBAAiB,QAMpCqC,EAAmBI,aAAapC,KAAKR,MAAMoD,WAAY5C,KAAKR,MAAMqD,aAAc7C,KAAKR,MAAMyD,YAAajD,KAAKR,MAAMuD,MAAO/C,KAAKR,MAAMwD,UAC3IjF,MAAK,SAAAoC,GACRC,QAAQC,IAAI,kBACZ,EAAKjB,SAAS,CAAEO,iBAAiB,IACjC,EAAKP,SAAS,CAAEoM,mBAAmB,OAElCnN,OAAM,SAAAC,GAEH,GAAa,8CAATA,EACA8B,QAAQC,IAAI,mCACZ,EAAKjB,SAAS,CAAEM,YAAa,oCAC7B,EAAKN,SAAS,CAAEO,iBAAiB,SAGjC,IACI,IAAIY,EAAM3C,KAAK4C,MAAMlC,GACrB8B,QAAQC,IAAIE,EAAIE,SAChB,EAAKrB,SAAS,CAAEM,YAAaa,EAAIE,UACjC,EAAKrB,SAAS,CAAEO,iBAAiB,IAGrC,MAAOrB,GACH8B,QAAQC,IAAI/B,QAOpCa,EAAMuB,mB,oCAINV,KAAKZ,SAAS,CAAEmM,UAAW,KAC3BvL,KAAKZ,SAAS,CAAE2D,MAAO,OACvB/C,KAAKZ,SAAS,CAAEkM,aAAczP,kE,kCAK9B,IAAI+O,GAAS,EAIb,OAHI5K,KAAKR,MAAMoD,YAAc5C,KAAKR,MAAMqD,cAAgB7C,KAAKR,MAAMyD,YAAYyC,OAAS,IAAM1F,KAAKR,MAAMG,iBAA6C,IAA1BK,KAAKR,MAAME,cACnIkL,GAAS,GAENA,I,sCAIP,OAAI5K,KAAKR,MAAMG,gBAEP,yBAAKgB,MAAM,iCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBAKmB,IAA1BgE,KAAKR,MAAME,YAEZ,kBAACqB,EAAA,EAAD,CAAO/E,UAAU,mBAAoBb,QAAQ,UAC5C6E,KAAKR,MAAME,kBAHf,I,+BASC,IAAD,OAEL,IAAqC,IAAjCM,KAAKR,MAAMgM,kBACX,OAAO,kBAAC,IAAD,CAAU9P,GAAG,iBAGxB,IAAM+M,EAAczI,KAAKR,MAAMyD,YAAYqD,KAAI,SAAAJ,GAAI,OAC/C,kBAAC8G,GAAA,EAAUC,KAAX,CAAgBzR,GAAG,KAAK0R,OAAQ,EAAK1N,MAAM6L,qBAAuBnF,EAAMlK,UAAU,YAAYmR,QAAM,EAAC3Q,QAAS,EAAKmP,mBAC9GzF,MAIT,OAAIlG,KAAKR,MAAMG,gBAGP,yBAAKgB,MAAM,wCACP,kBAACC,EAAA,EAAD,CAASC,UAAU,OAAO1F,QAAQ,UAAU2F,KAAK,UAC7C,0BAAM9E,UAAU,2BAAhB,gBASR,kBAACgF,EAAA,EAAD,CAAMtG,GAAG,eAAeuG,SAAUjB,KAAKD,cAEnC,kBAACsH,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKE,GAAI,IACJ/G,KAAKoN,gBAEN,kBAACpM,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAElB,wBAAIpF,UAAU,oBAAd,mBACA,kBAACgF,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOiG,KAAK,KAAKvH,KAAK,aAAauB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMoD,eAKtH,kBAACiE,EAAA,EAAD,CAAKE,GAAI,GAEL,kBAAC/F,EAAA,EAAKG,MAAN,CAAYC,UAAU,oBAElB,wBAAIpF,UAAU,eAAd,YACA,kBAACgF,EAAA,EAAKM,QAAN,CAAc9F,GAAG,WAAW6R,MAAO,CAAEtR,OAAQ,SAAWyL,KAAK,KAAKjG,KAAK,OAAOtB,KAAK,eAAeuB,UAAQ,EAACE,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAMqD,gBAG9J,kBAAC7B,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBACtB,kBAACJ,EAAA,EAAKW,MAAN,CAAYJ,KAAK,WAAWK,MAAM,oBAAoB5F,UAAU,yBAAyBiE,KAAK,WAAWyB,SAAU1B,KAAKd,qBAAsBK,QAASS,KAAKR,MAAMwD,aAItK,kBAAC6D,EAAA,EAAD,CAAKE,GAAI,GACL,kBAAC/F,EAAA,EAAKG,MAAN,CAAYC,UAAU,mBAElB,wBAAIpF,UAAU,eAAd,mBACA,kBAACgF,EAAA,EAAKM,QAAN,CAAcC,KAAK,OAAOtB,KAAK,mBAAmByB,SAAU1B,KAAKH,aAAcK,MAAOF,KAAKR,MAAM4L,oBAGrG,yBAAKzK,MAAM,sCACP,kBAACkB,EAAA,EAAD,CAAQ4F,UAAWzH,KAAKR,MAAM4L,iBAAkB5O,QAASwD,KAAK0L,oBAAqB1P,UAAU,QAA7F,SACA,kBAAC6F,EAAA,EAAD,CAAQ4F,UAAWzH,KAAKR,MAAM6L,mBAAoB7O,QAASwD,KAAK4L,wBAAhE,cAEJ,kBAACoB,GAAA,EAAD,CAAWtS,GAAG,mBAAmBc,GAAG,MAC/BiN,IAIT,kBAAC5B,EAAA,EAAD,CAAKE,GAAI,IACL,wBAAI/K,UAAU,eAAd,aAGJ,kBAAC6K,EAAA,EAAD,CAAKE,GAAI,GACL,yBAAKpG,MAAM,oBACP,2BAAOjG,GAAG,WAAW6G,KAAK,OAAOZ,MAAM,oBAAoB2M,OAAO,0BAA0B5L,SAAU1B,KAAKyL,eAC3G,2BAAO9K,MAAM,oBAAoB4M,IAAI,oBAArC,qBAKR,kBAAC1G,EAAA,EAAD,CAAKE,GAAI,GACL,yBAAKpG,MAAM,oBAEP,yBAAKA,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,UAAUqB,QAASwD,KAAK6L,YAAarE,KAAK,KAAKC,UAAWzH,KAAKR,MAAM+L,WAArF,wBAOZ,kBAAC1E,EAAA,EAAD,CAAKE,GAAI,GACL,yBAAK/K,UAAU,gCAAgCJ,IAAKoE,KAAKR,MAAM8L,gBAEnE,kBAACzE,EAAA,EAAD,CAAKE,GAAI,IACL,yBAAKpG,MAAM,iCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,UAAUoG,KAAK,SAASiG,KAAK,KAAKC,UAAWzH,KAAKmL,aAC7DnL,KAAKR,MAAM0L,KAAO,uBAAyB,kBAIpD,yBAAKvK,MAAM,sCACP,kBAACkB,EAAA,EAAD,CAAQ1G,QAAQ,kBAAkBK,GAAIC,IAAMC,GAAG,eAAeM,UAAU,QAAxE,yB,GAvYZ8F,aCuDxB,IAAM0L,GAAe,SAAC,GAAD,IAAc1L,EAAd,EAAG2L,UAA8CC,GAAjD,EAAyBC,MAAzB,EAAgCC,OAAhC,EAAwCC,KAAxC,6DACnB,kBAAC,IAAD,iBAAWH,EAAX,CAAiBI,OAAQ,SAACxK,GAAD,OACvB5J,EAAeW,kBACX,kBAACyH,EAAcwB,GACf,kBAAC,IAAD,CAAU5H,GAAI,CACdwL,SAAU,SACV1H,MAAO,CAAEuO,KAAMzK,EAAMc,kBA0Bd4J,GAjEf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOH,KAAK,SAASJ,UAAWxO,IAEhC,kBAAC,IAAD,CAAO4O,KAAK,YAAYJ,UAAWjD,KAEnC,kBAAC,IAAD,CAAOqD,KAAK,SAASJ,UAAWxD,KAEhC,kBAAC,GAAD,CAAc4D,KAAK,eAAeJ,UAAWpK,IAE7C,kBAAC,GAAD,CAAcwK,KAAK,iBAAiBJ,UAAWpK,IAE/C,kBAAC,GAAD,CAAcwK,KAAK,qBAAqBJ,UAAWpK,IAGnD,kBAAC,GAAD,CAAcwK,KAAK,qBAAqBJ,UAAW/F,IAEnD,kBAAC,GAAD,CAAcmG,KAAK,YAAYJ,UAAWxC,KAjB5C,MAmBE,kBAAC,GAAD,CAAc4C,KAAK,IAAIJ,UAAWpK,QCxCxB4K,QACW,cAA7B9J,OAAOC,SAAS8J,UAEe,UAA7B/J,OAAOC,SAAS8J,UAEhB/J,OAAOC,SAAS8J,SAAS5F,MACvB,2DCXN6F,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,GAAD,OAEFvD,SAASC,eAAe,SDwHpB,kBAAmBuD,WACrBA,UAAUC,cAAcC,MACrBxQ,MAAK,SAAAyQ,GACJA,EAAaC,gBAEdpQ,OAAM,SAAAC,GACL8B,QAAQ9B,MAAMA,EAAMmC,c","file":"static/js/main.834b489e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport Cookie from \"js-cookie\"\r\n\r\nexport const Authentication = {\r\n    SaveToken,\r\n    LoadToken,\r\n    LogOut,\r\n    isAuthenticated,\r\n    SaveUserData,\r\n    LoadUserEmail,\r\n    LoadUserId,\r\n    LoadUserName,\r\n    LoadUserFavouritesRecipes,\r\n    SaveFavouritesRecipes\r\n};\r\n\r\n\r\nfunction SaveToken(token, remember) {\r\n    if (remember) {\r\n        Cookie.set(\"JWT\", token, { expires: 7 });\r\n    }\r\n    else {\r\n        Cookie.set(\"JWT\", token)\r\n    }\r\n}\r\n\r\nfunction LoadToken() {\r\n    return Cookie.get(\"JWT\") ? Cookie.get(\"JWT\") : null;\r\n}\r\n\r\nfunction LogOut() {\r\n    Cookie.remove('JWT');\r\n    Cookie.remove('userName');\r\n    Cookie.remove('email');\r\n    Cookie.remove('id');\r\n}\r\n\r\nfunction isAuthenticated() {\r\n    return Cookie.get(\"JWT\") ? true : false;\r\n}\r\n\r\nfunction SaveUserData(userJson) {\r\n    Cookie.set(\"userName\", userJson.userName, { expires: 7 });\r\n    Cookie.set(\"email\", userJson.email, { expires: 7 });\r\n    Cookie.set(\"id\", userJson.id, { expires: 7 });\r\n    Cookie.set(\"favouriteRecipes\", userJson.favouriteRecipes, { expires: 7 });\r\n}\r\n\r\nfunction LoadUserName() {\r\n    return Cookie.get(\"userName\") ? Cookie.get(\"userName\") : null;\r\n}\r\n\r\nfunction LoadUserEmail() {\r\n    return Cookie.get(\"email\") ? Cookie.get(\"email\") : null;\r\n}\r\n\r\nfunction LoadUserId() {\r\n    return Cookie.get(\"id\") ? Cookie.get(\"id\") : null;\r\n}\r\n\r\nfunction LoadUserFavouritesRecipes() {\r\n    return Cookie.get(\"favouriteRecipes\") ? Cookie.get(\"favouriteRecipes\") : null;\r\n}\r\n\r\nfunction SaveFavouritesRecipes(favouriteRecipes)\r\n{\r\n    Cookie.set(\"favouriteRecipes\", favouriteRecipes, { expires: 7 });\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, useHistory, } from \"react-router-dom\";\r\nimport { Authentication } from '../helpers/Authentication'\r\n\r\n\r\n\r\nfunction AuthButton() {\r\n    let history = useHistory();\r\n    return Authentication.isAuthenticated() ? (\r\n\r\n        <Nav.Link\r\n            onClick={() => {\r\n                Authentication.LogOut(() => history.push(\"/\"));\r\n\r\n            }}\r\n            as={Link} to=\"/Login\">\r\n            Wyloguj\r\n          </Nav.Link>\r\n    ) : (\r\n            <Nav.Link as={Link} to=\"/Login\">\r\n                Zaloguj się\r\n     </Nav.Link>\r\n        );\r\n}\r\n\r\nfunction GetName() {\r\n    if (Authentication.LoadUserName() != null && Authentication.isAuthenticated()) {\r\n        return (\r\n            <Navbar.Text className=\"AboutUser\">\r\n                Witaj {Authentication.LoadUserName() +\"!\"}\r\n            </Navbar.Text>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction NavIfLogged() {\r\n\r\n    if (Authentication.LoadUserName() != null && Authentication.isAuthenticated()) {\r\n        return (\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link as={Link} to=\"/Edit/0\" >Dodaj przepis</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/UserRecipes\" >Moje przepisy</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/PublicRecipes\" >Odkrywaj przepisy</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/FavouritesRecipes\" >Ulubione przepisy</Nav.Link>\r\n            </Nav>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <Navbar variant=\"dark\" bg=\"primary\" sticky=\"top\" expand=\"lg\">\r\n                <Navbar.Brand  as={Link} to=\"/UserRecipes\">  <img\r\n        alt=\"\"\r\n        src= {process.env.REACT_APP_PUBLIC_URL +  '/blankicon256.png'}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '} Cook Book</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    {NavIfLogged()}\r\n                    <Nav className=\"justify-content-end\">\r\n                    <Nav.Link className=\"mr-3\" as={Link} to=\"/About\" >O aplikacji</Nav.Link>\r\n                        {GetName()}\r\n                        {AuthButton()}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Authentication } from \"../helpers/Authentication\"\r\n\r\nexport const AuthHeaders = {\r\n    GetBearer,\r\n};\r\n\r\nfunction GetBearer() {\r\n    let authHeader = 'bearer ' + Authentication.LoadToken()\r\n\r\n    return authHeader;\r\n}\r\n\r\n","import React from 'react';\r\nimport { AuthHeaders } from '../helpers/AuthHeaders'\r\nimport { Authentication } from '../helpers/Authentication'\r\n\r\nexport const APIHelper = {\r\n    Register,\r\n    LogIn,\r\n    GetUserData,\r\n    EditUser\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nasync function Register(Email, UserName, Password, ConfirmPassword) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ Email, UserName, Password, ConfirmPassword })\r\n    };\r\n\r\n    return await fetch(API_URL + '/api/Account/register', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n};\r\n\r\n\r\nasync function LogIn(username, password) {\r\n\r\n    let body = new URLSearchParams();\r\n    body.append(\"grant_type\", \"password\");\r\n    body.append(\"username\", username);\r\n    body.append(\"password\", password);\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: body\r\n    };\r\n\r\n    return await fetch(API_URL + '/token', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n};\r\n\r\n\r\nasync function GetUserData() {\r\n\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await fetch(API_URL + '/api/User', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function EditUser(FavouriteRecipes) {\r\n\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Id = Authentication.LoadUserId();\r\n    let UserName = Authentication.LoadUserName();\r\n    let Email = Authentication.LoadUserEmail();\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Id\", Id);\r\n    formdata.append(\"UserName\", UserName);\r\n    formdata.append(\"Email\", Email);\r\n    formdata.append(\"FavouriteRecipes\", FavouriteRecipes);\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/User/${Id}`, requestOptions)\r\n    .then(response => {\r\n        // reject not ok response\r\n        if (!response.ok) {\r\n            return Promise.reject(response)\r\n        }\r\n        return response.text()\r\n    })\r\n    // catch error response and extract the error message\r\n    .catch(async response => {\r\n        const error = await response.text().then(text => text)\r\n        return Promise.reject(error)\r\n    })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Login: \"\",\r\n            Password: \"\",\r\n            RememberMe: false,\r\n            InfoMessage: \"\",\r\n            DuringOperation: false,\r\n            isLogged: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Authentication.isAuthenticated()) {\r\n            this.setState({ isLogged: true })\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleCheckboxChange = event =>\r\n    this.setState({ RememberMe: event.target.checked })\r\n\r\n    handleSubmit(event) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = APIHelper.LogIn(this.state.Login, this.state.Password)\r\n        result.then(data => {\r\n            console.log(\"Zalogowano\")\r\n            this.setState({ InfoMessage: \"\" })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            Authentication.SaveToken(data.access_Token, this.state.RememberMe)\r\n            this.GetUserData();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    GetUserData() {\r\n        let result = APIHelper.GetUserData()\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            Authentication.SaveUserData(data);\r\n            this.setState({ isLogged: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    LoginMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.InfoMessage != \"\") {\r\n                return (\r\n                    <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                    {this.state.InfoMessage}\r\n                </Alert>\r\n                );\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLogged === true) {\r\n            return <Redirect to='/UserRecipes' />\r\n        }\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <h1 className=\"display-3 text-center mt-5\">Logowanie</h1>\r\n\r\n                            {this.LoginMessage()}\r\n\r\n                            <Form.Group controlId=\"formLogin\">\r\n                                <Form.Label>Login</Form.Label>\r\n                                <Form.Control type=\"text\" required placeholder=\"Enter login\" name=\"Login\" onChange={this.handleChange} value={this.state.Login} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <Form.Control type=\"password\" required placeholder=\"Password\" name=\"Password\" onChange={this.handleChange} value={this.state.Password} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formRemember\">\r\n                                <Form.Check type=\"checkbox\" label=\"Zapamiętaj\" name=\"RememberMe\" onChange={this.handleCheckboxChange} checked={this.state.RememberMe} />\r\n                            </Form.Group>\r\n\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Zaloguj\r\n                        </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"lead text-center mt-3\">Nie masz jeszcze konta? Zarejestruj się!</h1>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Button variant=\"outline-primary\" as={Link} to=\"/Register\"  >\r\n                        Zarejestruj\r\n            </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {Authentication} from '../src/helpers/Authentication'\r\n\r\nfunction Main()\r\n{\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n        <button\r\n        onClick={() => {\r\n          Authentication.DeleteToken();\r\n        }}\r\n      >\r\n        Sign out\r\n      </button>\r\n      </div>\r\n    ) \r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport { AuthHeaders } from '../helpers/AuthHeaders'\r\n\r\nexport const RecipesEndPointAPI = {\r\n    GetAllRecipesLoggedUser,\r\n    DownloadImage,\r\n    DeleteRecipes,\r\n    InsertRecipe,\r\n    GetRecipeByID,\r\n    PutRecipes,\r\n    GetPublicRecipes,\r\n    GetFavouritesRecipes\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nasync function GetRecipeByID(Id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/Recipes/${Id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function GetAllRecipesLoggedUser(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/CurrentUserRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function GetPublicRecipes(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetPublicRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\nasync function GetFavouritesRecipes(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetFavouritesRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function DownloadImage(id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetPhoto/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.blob()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function DeleteRecipes(id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function InsertRecipe(RecipeName, Instructions, IngredientsArr, Image, isPublic) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Ingredients = IngredientsArr.join(\";\");\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Name\", RecipeName);\r\n    formdata.append(\"Instruction\", Instructions);\r\n    formdata.append(\"Ingredients\", Ingredients);\r\n    formdata.append(\"Image\", Image);\r\n    formdata.append(\"isPublic\", isPublic);\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await  fetch(API_URL + '/api/Recipes/', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\nasync function PutRecipes(id, RecipeId, RecipeName, Instructions, IngredientsArr, Image, NameOfImage, isPublic) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Ingredients = IngredientsArr.join(\";\");\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Name\", RecipeName);\r\n    formdata.append(\"Instruction\", Instructions);\r\n    formdata.append(\"Ingredients\", Ingredients);\r\n    formdata.append(\"Image\", Image);\r\n    formdata.append(\"NameOfImage\", NameOfImage);\r\n    formdata.append(\"RecipeId\", RecipeId);\r\n    formdata.append(\"isPublic\", isPublic);\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/Recipes/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col, Alert, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass Recipes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            DuringOperation: false,\r\n            UserOrPublicOrFavourites: \"User\",\r\n            InfoMessage: \"\",\r\n            Recipes: [],\r\n            CanNext : false,\r\n            CanPrevious: false,\r\n            PageSize : 15,\r\n            TotalPages : 1,\r\n            PageNumberUserRecipes : 1,\r\n            PageNumberPublicRecipes : 1,\r\n            PageNumberFavouritesRecipes : 1,\r\n        }\r\n\r\n        this.PreviousPage = this.PreviousPage.bind(this);\r\n        this.NextPage = this.NextPage.bind(this);\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n       this.CheckPath()\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.CheckPath()\r\n    }\r\n\r\n\r\n    AddDisplayAsPublicProperty(data)\r\n    {\r\n        let pathName = window.location.hash;\r\n\r\n        data.forEach(function (element) {\r\n            element.DisplayAsPublic = false;\r\n            if(element.isPublic && element.userName === Authentication.LoadUserName() && (pathName === \"#/PublicRecipes\" || pathName === \"#/UserRecipes\"|| pathName === \"#/\" || pathName === \"/\"))\r\n            {\r\n                element.DisplayAsPublic = true;\r\n            }\r\n            else{\r\n                element.DisplayAsPublic = false;\r\n            }   \r\n          });\r\n    }\r\n\r\n    AddDisplayAsFavouritesProperty(data)\r\n    {\r\n        let pathName = window.location.hash;\r\n        let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n        data.forEach(function (element) {\r\n            element.DisplayAsFavourite = false;\r\n            if(pathName === \"#/PublicRecipes\" && favourites.includes(element.recipeId))\r\n            {\r\n                element.DisplayAsFavourite = true;\r\n            }\r\n            else{\r\n                element.DisplayAsFavourites = false;\r\n            }   \r\n          });\r\n    }\r\n\r\n    CheckPath()\r\n    {\r\n        try {\r\n            let pathName = window.location.hash;\r\n\r\n        let pageNumberUser = this.props.location.pageBackUser\r\n        let pageNumberPublic = this.props.location.pageBackPublic\r\n        let pageNumberFavourites = this.props.location.pageBackFavourites\r\n\r\n        if(pageNumberUser != undefined)\r\n        this.setState({ PageNumberUserRecipes: pageNumberUser})\r\n\r\n        if(pageNumberPublic != undefined)\r\n        this.setState({ PageNumberPublicRecipes: pageNumberPublic})\r\n\r\n        if(pageNumberFavourites != undefined)\r\n        this.setState({ PageNumberFavouritesRecipes: pageNumberFavourites})\r\n\r\n             if (pathName === \"#/PublicRecipes\") {\r\n                let pageNumber = this.props.location.pageBackPublic\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberPublicRecipes\r\n\r\n                 this.setState({ PageNumberPublicRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"Public\" })\r\n                 this.LoadPublicRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else if(pathName === \"#/UserRecipes\") {\r\n                let pageNumber = this.props.location.pageBackUser\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberUserRecipes\r\n\r\n                this.setState({ PageNumberUserRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n                 this.LoadUserRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else if(pathName === \"#/FavouritesRecipes\") {\r\n                let pageNumber = this.props.location.pageBackFavourites\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberFavouritesRecipes\r\n\r\n                this.setState({ PageNumberFavouritesRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"Favourites\" })\r\n                 this.LoadFavouritesRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else{\r\n                this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n                this.LoadUserRecipes(this.state.PageSize, this.state.PageNumberUserRecipes)\r\n             }\r\n \r\n \r\n         } catch (error) {\r\n             this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n             this.LoadUserRecipes(this.state.PageSize, this.state.PageNumberUserRecipes)\r\n         }\r\n    }\r\n\r\n    LoadUserRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = RecipesEndPointAPI.GetAllRecipesLoggedUser(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            this.AddDisplayAsPublicProperty(data)\r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})\r\n            }\r\n\r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    LoadPublicRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        this.LoadUserData();\r\n\r\n        let result = RecipesEndPointAPI.GetPublicRecipes(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            this.AddDisplayAsPublicProperty(data)\r\n            this.AddDisplayAsFavouritesProperty(data)\r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})\r\n            }\r\n\r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    LoadFavouritesRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = RecipesEndPointAPI.GetFavouritesRecipes(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n           \r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})\r\n            }\r\n            \r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    //Get user favourites recipes - All. \r\n    LoadUserData()\r\n    {\r\n        let result = APIHelper.GetUserData()\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            Authentication.SaveUserData(data);\r\n            this.setState({ isLogged: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n        //this.setState({ DuringOperation: true })\r\n\r\n        this.state.Recipes.forEach(function (item, key) {\r\n\r\n            if (item.nameOfImage === null) {\r\n                item.image =  process.env.REACT_APP_PUBLIC_URL +'/food template.png'\r\n                that.setState({\r\n                    Recipes: that.state.Recipes.map(el => (el.recipeId === item.recipeId ? { ...el, item } : el))\r\n                });\r\n            }\r\n            else {\r\n                let result = RecipesEndPointAPI.DownloadImage(item.nameOfImage)\r\n                result.then(data => {\r\n                    outside = URL.createObjectURL(data)\r\n                    item.image = outside\r\n                    that.setState({\r\n                        Recipes: that.state.Recipes.map(el => (el.recipeId === item.recipeId ? { ...el, item } : el))\r\n                    });\r\n                    that.setState({ DuringOperation: false })\r\n\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            that.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                that.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                                that.setState({ DuringOperation: false })\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n        });\r\n    }\r\n\r\n    PreviousPage(){\r\n      if(this.state.UserOrPublicOrFavourites === \"User\")\r\n      {\r\n\r\n        let actualPage = this.state.PageNumberUserRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberUserRecipes: prevstate.PageNumberUserRecipes - 1}));\r\n          this.LoadUserRecipes(this.state.PageSize, actualPage - 1)\r\n      }\r\n      else if(this.state.UserOrPublicOrFavourites === \"Public\"){\r\n\r\n        let actualPage = this.state.PageNumberPublicRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberPublicRecipes: prevstate.PageNumberPublicRecipes - 1}));\r\n          this.LoadPublicRecipes(this.state.PageSize, actualPage - 1)\r\n      }  \r\n    else if(this.state.UserOrPublicOrFavourites === \"Favourites\"){\r\n\r\n        let actualPage = this.state.PageNumberFavouritesRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberFavouritesRecipes: prevstate.PageNumberFavouritesRecipes - 1}));\r\n          this.LoadFavouritesRecipes(this.state.PageSize, actualPage - 1)\r\n    }\r\n}\r\n\r\n    NextPage()\r\n    {\r\n        if(this.state.UserOrPublicOrFavourites === \"User\")\r\n        {\r\n\r\n            let actualPage = this.state.PageNumberUserRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberUserRecipes: prevstate.PageNumberUserRecipes + 1}));\r\n            this.LoadUserRecipes(this.state.PageSize, actualPage + 1)\r\n        }\r\n        else if(this.state.UserOrPublicOrFavourites === \"Public\"){\r\n            let actualPage = this.state.PageNumberPublicRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberPublicRecipes: prevstate.PageNumberPublicRecipes + 1}));\r\n            this.LoadPublicRecipes(this.state.PageSize, actualPage + 1)\r\n        } \r\n        else if(this.state.UserOrPublicOrFavourites === \"Favourites\"){\r\n\r\n            let actualPage = this.state.PageNumberFavouritesRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberFavouritesRecipes: prevstate.PageNumberFavouritesRecipes + 1}));\r\n            this.LoadFavouritesRecipes(this.state.PageSize, actualPage + 1)\r\n    }\r\n}\r\n\r\n    NavigationButtonsActiveDeactive(pageNumber)\r\n    {\r\n        if (pageNumber <= 1)\r\n        {\r\n            this.setState({CanPrevious : false});\r\n        }\r\n        else\r\n        {\r\n            this.setState({CanPrevious : true});\r\n        }\r\n\r\n        if (pageNumber >= this.state.TotalPages)\r\n        {\r\n            this.setState({CanNext : false});\r\n        }\r\n        else\r\n        {\r\n            this.setState({CanNext : true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        } else if (this.state.InfoMessage != \"\") {\r\n            return (\r\n                <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                    {this.state.InfoMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n        else {\r\n\r\n            const recipes = this.state.Recipes.map(item =>{\r\n                return(\r\n                    <Col sm={4} md={3} lg={2} xl={2} as={Link} to={\r\n                        {\r\n                            pathname: `/RecipePreview/${item.recipeId}`,\r\n                            recipeProps: item,\r\n                            UserOrPublicOrFavouritesProps: this.state.UserOrPublicOrFavourites,\r\n                            pageBackUser: this.state.PageNumberUserRecipes,\r\n                            pageBackPublic: this.state.PageNumberPublicRecipes,\r\n                            pageBackFavourites: this.state.PageNumberFavouritesRecipes\r\n                        }} \r\n                         className={ item.DisplayAsPublic ? 'PublicRecipe' : item.DisplayAsFavourite ? 'FavouriteRecipe' : \"NormalRecipe\"} key={item.recipeId}>\r\n    \r\n                        <div className=\"mt-3 singleRecipe\" >\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <img src={item.image} />\r\n                            </div>\r\n                            <p className=\"text-center\"> {item.name}</p>\r\n                        </div>\r\n                    </Col>\r\n                )\r\n           })\r\n                \r\n            return (\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-center\">\r\n                        {recipes}\r\n\r\n                        <Col md={12}>\r\n                        <div className=\"d-flex justify-content-center mt-3\">\r\n                        <Button className=\"mr-3\" variant=\"primary\" size=\"lg\" disabled={!this.state.CanPrevious} onClick={this.PreviousPage}> &lt;= </Button>\r\n                        <p className=\"mr-3 \">\r\n                        {(() => {\r\n                            switch (this.state.UserOrPublicOrFavourites) {\r\n                            case \"User\":   return \"Strona \" + this.state.PageNumberUserRecipes + \" z \" + this.state.TotalPages;\r\n                            case \"Public\": return \"Strona \" + this.state.PageNumberPublicRecipes + \" z \" + this.state.TotalPages;\r\n                            case \"Favourites\":  return \"Strona \" + this.state.PageNumberFavouritesRecipes + \" z \" + this.state.TotalPages;\r\n                            default:      return \"Strona \" + this.state.PageNumberUserRecipes + \" z \" + this.state.TotalPages;\r\n                            }\r\n                        })()}\r\n                        </p>\r\n            <Button variant=\"primary\" size=\"lg\" disabled={!this.state.CanNext} onClick={this.NextPage}> =&gt; </Button>\r\n\r\n                        </div>\r\n                       \r\n                        </Col>\r\n\r\n                \r\n                    </Row>\r\n                </Container>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Recipes","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col, Alert, Button, Modal } from 'react-bootstrap';\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nexport * from 'react-router';\r\n\r\nclass RecipePreview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            Instructions: \"\",\r\n            Ingredients: [],\r\n            Image: \"\",\r\n            nameOfImage: \"\",\r\n            ID: \"\",\r\n            isPublic: false,\r\n            userName: \"\",\r\n            showModal: false,\r\n            RecipeDeleted: false,\r\n            DuringOperation: false,\r\n            InfoMessage: \"\",\r\n            LastVisit : \"\",\r\n            PageBack: \"1\",\r\n            IsFavourite: false,\r\n        }\r\n\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleModalShow = this.handleModalShow.bind(this);\r\n        this.handleRecipeDelete = this.handleRecipeDelete.bind(this);\r\n        this.handleFavouriteCLick = this.handleFavouriteCLick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //Pobierz przepis z przeslanych propsow. Gdy strona odswiezana/ nie ma propsow, pobierz z API\r\n        console.log(this.props.match.params.id)\r\n        try {\r\n            this.setState({ Name: this.props.location.recipeProps.item.name })\r\n            this.setState({ Instructions: this.props.location.recipeProps.item.instruction })\r\n            this.setState({ Ingredients: this.props.location.recipeProps.item.ingredients })\r\n            this.setState({ Image: this.props.location.recipeProps.item.image })\r\n            this.setState({ ID: this.props.location.recipeProps.item.recipeId })\r\n            this.setState({ nameOfImage: this.props.location.recipeProps.item.nameOfImage })\r\n            this.setState({ isPublic: this.props.location.recipeProps.item.isPublic })\r\n            this.setState({ userName: this.props.location.recipeProps.item.userName })\r\n            this.setState({ PageBackUser: (this.props.location.pageBackUser)})\r\n            this.setState({ PageBackPublic: (this.props.location.pageBackPublic)})\r\n            this.setState({ PageBackFavourites: (this.props.location.pageBackFavourites)})\r\n\r\n            let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n            if(favourites.includes(this.props.location.recipeProps.item.recipeId )){\r\n                this.setState({ IsFavourite: (true)})\r\n            }\r\n\r\nif(this.props.location.UserOrPublicOrFavouritesProps === \"User\")\r\n{\r\n    this.setState({ LastVisit: \"/UserRecipes\"})\r\n}\r\nelse if (this.props.location.UserOrPublicOrFavouritesProps === \"Public\")\r\n{\r\n    this.setState({ LastVisit: \"/PublicRecipes\"})\r\n}\r\nelse{\r\n    this.setState({ LastVisit: \"/FavouritesRecipes\"})\r\n}       \r\n        } catch (error) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = RecipesEndPointAPI.GetRecipeByID(this.props.match.params.id)\r\n            result.then(data => {\r\n                console.log(\"Pobrano przepis \")\r\n                this.setState({ Name: data.name })\r\n                this.setState({ Instructions: data.instruction })\r\n                this.setState({ Ingredients: data.ingredients })\r\n                this.setState({ nameOfImage: data.nameOfImage })\r\n                this.setState({ ID: data.recipeId })\r\n                this.setState({ isPublic: data.isPublic })\r\n                this.setState({ userName: data.userName })\r\n\r\n                this.setState({ LastVisit: \"/UserRecipes\"})\r\n\r\n                let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n                if(favourites.includes(data.recipeId )){\r\n                    this.setState({ IsFavourite: (true)})\r\n                }\r\n\r\n                this.setState({ DuringOperation: false })\r\n                this.DonwloadRecipeImage();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessage: \"Problem z połączeniem\"})\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessage: obj.message})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n\r\n        if (this.state.nameOfImage === null) {\r\n            this.setState({ Image: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n        }\r\n        else {\r\n\r\n            this.setState({ DuringOperation: true })\r\n            let result = RecipesEndPointAPI.DownloadImage(this.state.nameOfImage)\r\n            result.then(data => {\r\n                console.log(\"Pobrano obrazek\")\r\n                outside = URL.createObjectURL(data)\r\n                this.setState({ Image: outside })\r\n                this.setState({ DuringOperation: false })\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleModalShow(event) {\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleModalClose(event) {\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleFavouriteCLick(event) {\r\n\r\n        let localBoolFavourites = false;\r\n        let favourites = Authentication.LoadUserFavouritesRecipes()\r\n        let favourtesArr = JSON.parse(favourites);\r\n\r\n        if(this.state.IsFavourite){     \r\n            localBoolFavourites = true;\r\n\r\n            const index = favourtesArr.indexOf(this.state.ID);\r\n            if (index > -1) {\r\n                favourtesArr.splice(index, 1);\r\n            }\r\n        }\r\n        else{\r\n            localBoolFavourites = false;\r\n\r\n            favourtesArr.push(this.state.ID) \r\n        }\r\n\r\n        let arraySemicolon= favourtesArr.join(';')\r\n            \r\n            let result =  APIHelper.EditUser(arraySemicolon)\r\n\r\n            result.then(data => {\r\n                if(localBoolFavourites){\r\n                    console.log(\"Usunięto z ulubionych!\")\r\n                    this.setState({ IsFavourite: (false)})\r\n                }\r\n                else{\r\n                    console.log(\"Dodano do ulubionych!\")\r\n                    this.setState({ IsFavourite: (true)})\r\n                }\r\n\r\n                Authentication.SaveFavouritesRecipes(favourtesArr)\r\n               \r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                })\r\n\r\n        \r\n\r\n    }\r\n\r\n    ModalDelete(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Na pewno chcesz usunąć ten przepis? Operacji nie można cofnąć!\r\n              </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={props.delete}>Usuń</Button>\r\n                    <Button variant=\"dark\" onClick={props.onHide}>Cofnij</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleRecipeDelete(event) {\r\n        let result = RecipesEndPointAPI.DeleteRecipes(this.state.ID)\r\n\r\n        result.then(data => {\r\n            console.log(\"Usunięto!\")\r\n            this.setState({ RecipeDeleted: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.RecipeDeleted === true) {\r\n            return <Redirect to='/Recipes' />\r\n        }\r\n\r\n        let editButton;\r\n        let deleteButton;\r\n        let authorInfo;\r\n        let favouriteButton;\r\n\r\n        if (!this.state.isPublic || this.state.userName === Authentication.LoadUserName()) \r\n        {      editButton =  <Button size=\"lg\" variant=\"outline-dark\" className=\"mr-3 mt-3 mb-3 mx-auto d-block\" as={Link} to={\r\n            {\r\n                pathname: `/Edit/${this.state.ID}`,\r\n                recipeProps: this.state\r\n            }}  >Edytuj</Button> \r\n        \r\n            deleteButton =  <Button onClick={this.handleModalShow} size=\"lg\" variant=\"outline-danger\" className=\"mt-3 mb-3  mx-auto d-block\">Usuń</Button>\r\n        \r\n            authorInfo = null;\r\n            favouriteButton = null;\r\n        } \r\n\r\n        else \r\n        {   editButton = null\r\n            deleteButton = null\r\n\r\n        authorInfo = <p  className=\"text-center\">Autor przepisu: {this.state.userName}</p>\r\n\r\n        favouriteButton =  <Button onClick={this.handleFavouriteCLick} size=\"lg\" variant=\"outline-warning\" className=\"mt-3 mb-3  mx-auto d-block\"> <img className=\"img-fluid imgStar\" \r\n         src= {this.state.IsFavourite ? process.env.REACT_APP_PUBLIC_URL +'/starFull.png' : process.env.REACT_APP_PUBLIC_URL + '/starEmpty.png'} /> </Button>\r\n\r\n         }\r\n\r\n        const ingredients = this.state.Ingredients.map(item =>\r\n            <li>\r\n                {item}\r\n            </li>)\r\n\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        } else if(this.state.InfoMessage != \"\")\r\n        {\r\n            return (\r\n            <Alert className=\"text-center mt-3\"  variant=\"danger\">\r\n            {this.state.InfoMessage}\r\n          </Alert>\r\n          )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <div>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <h1 className=\"mt-3 mb-3 text-center\">{this.state.Name}</h1>\r\n                            </Col>\r\n\r\n                            <Col md={12}>\r\n                                <p className=\"ml-2 mr-2\" >{this.state.Instructions}</p>\r\n                            </Col>\r\n\r\n                            <Col md={4} className=\"align-self-center\">\r\n                                <ul>\r\n                                    {ingredients}\r\n                                </ul>\r\n                            </Col>\r\n\r\n                            <Col md={8}>\r\n                                <img className=\"img-fluid mx-auto d-block\" src={this.state.Image}></img>\r\n                            </Col>\r\n\r\n                            <Col  >\r\n                                <Button size=\"lg\" variant=\"outline-dark\" className=\"mr-3 mt-3 mb-3 mx-auto d-block\" as={Link} to={\r\n                    {\r\n                        pathname: this.state.LastVisit,\r\n                        pageBackUser: this.state.PageBackUser,\r\n                        pageBackPublic: this.state.PageBackPublic,\r\n                        pageBackFavourites: this.state.PageBackFavourites,\r\n                    }} >Powrót</Button>\r\n                            </Col>\r\n\r\n                            <Col className=\"align-self-center\" >\r\n                               {editButton}\r\n                               {authorInfo}\r\n                           \r\n                            </Col>\r\n                            <Col  >\r\n                               {deleteButton}\r\n                               {favouriteButton}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <this.ModalDelete\r\n                        show={this.state.showModal}\r\n                        onHide={this.handleModalClose}\r\n                        name={this.state.Name}\r\n                        delete={this.handleRecipeDelete}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default RecipePreview","import React, { useState, useEffect } from 'react'\r\n\r\nfunction About()\r\n{\r\n    const [appVersion, setAppVersion] = useState();\r\n\r\n    const ReactAppVersion = process.env.REACT_APP_VERSION;\r\n\r\n    useEffect(() => {setAppVersion(ReactAppVersion)});\r\n\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src = {process.env.REACT_APP_PUBLIC_URL + '/blankicon256.png'}/>\r\n          <p>\r\n           CookBook {appVersion}\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://github.com/owik100/cook_book_client_web\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            GitHub\r\n          </a>\r\n        </header>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\nimport { Form, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Email: \"\",\r\n            Login: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            InfoMessage: \"\",\r\n            InfoMessageIsError: false,\r\n            DuringOperation: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if (this.CanRegister()) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = APIHelper.Register(this.state.Email, this.state.Login, this.state.Password, this.state.ConfirmPassword);\r\n            result.then(data => {\r\n                console.log(\"Rejestracja pomyślna! Możesz teraz się zalogować.\")\r\n                this.setState({ InfoMessage: \"Rejestracja pomyślna! Możesz teraz się zalogować.\" })\r\n                this.setState({ InfoMessageIsError: false })\r\n                this.setState({ DuringOperation: false })\r\n                this.ClearForm();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessageIsError: true })\r\n                        this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessageIsError: true })\r\n                            this.setState({ InfoMessage: obj.message })\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    CanRegister() {\r\n        let output = false;\r\n        if (this.state.Email && this.state.Login && this.state.Password && this.state.ConfirmPassword && !this.state.DuringOperation) {\r\n            if (this.state.Password === this.state.ConfirmPassword) {\r\n                output = true;\r\n                this.setState({ InfoMessageIsError: false })\r\n                this.setState({ InfoMessage: \"\" })\r\n            }\r\n            else {\r\n                this.setState({ InfoMessageIsError: true })\r\n                this.setState({ InfoMessage: \"Hasła nie są takie same\" })\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    ClearForm() {\r\n        document.getElementById(\"registerForm\").reset();\r\n\r\n        this.setState({ Email: \"\" })\r\n        this.setState({ Login: \"\" })\r\n        this.setState({ Password: \"\" })\r\n        this.setState({ ConfirmPassword: \"\" })\r\n    }\r\n\r\n    RegisterMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.InfoMessage != \"\" && this.state.InfoMessageIsError == false) {\r\n                return (\r\n\r\n                    <Alert className=\"text-center\" variant=\"success\">\r\n                        {this.state.InfoMessage}\r\n                    </Alert>\r\n                );\r\n            }\r\n            else if (this.state.InfoMessage != \"\" && this.state.InfoMessageIsError == true) {\r\n                return (\r\n                    <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                        {this.state.InfoMessage}\r\n                    </Alert>\r\n                );\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n\r\n                        <Form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n                            <h1 className=\"display-3 text-center mt-5\">Rejestracja</h1>\r\n\r\n                            {this.RegisterMessage()}\r\n\r\n                            <Form.Group controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"Email\" required onChange={this.handleChange} value={this.state.Email} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formLogin\">\r\n                                <Form.Label>Login</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter login\" name=\"Login\" required onChange={this.handleChange} value={this.state.Login} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"Password\" required onChange={this.handleChange} value={this.state.Password} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPasswordRepeat\">\r\n                                <Form.Label>Powtórz hasło</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"ConfirmPassword\" required onChange={this.handleChange} value={this.state.ConfirmPassword} />\r\n                            </Form.Group>\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Zarejestruj\r\n                         </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Button variant=\"outline-primary\" as={Link} to=\"/Login\" className=\"mt-3\"  >\r\n                        Wróć\r\n            </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col,  Button, Alert, Form, ListGroup } from 'react-bootstrap';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\n\r\nclass AddOrEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Edit: false,\r\n            InfoMessage: \"\",\r\n            DuringOperation: false,\r\n            CanSubmit: false,\r\n            RecipeName: \"\",\r\n            Instructions: \"\",\r\n            Ingredients: [],\r\n            IngredientsInput: \"\",\r\n            SelectedIngredient: \"\",\r\n            isPublic: false,\r\n            Image: null,\r\n            ImagePreview: null,\r\n            ImageName: \"\",\r\n            ID: \"\",\r\n            OperationComplete: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChangeFile = this.onChangeFile.bind(this);\r\n        this.handleIngredientAdd = this.handleIngredientAdd.bind(this);\r\n        this.handleRecipeClick = this.handleRecipeClick.bind(this);\r\n        this.handleIngredientRemove = this.handleIngredientRemove.bind(this);\r\n        this.DeleteImage = this.DeleteImage.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bsCustomFileInput.init()\r\n        this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL +'/food template.png' })\r\n\r\n        try {\r\n            if (this.props.match.params.id != 0) {\r\n                this.setState({ Edit: true })\r\n\r\n                //Jezeli edytujemy, wez dane z prospow\r\n                this.setState({ RecipeName: this.props.location.recipeProps.Name })\r\n                this.setState({ Instructions: this.props.location.recipeProps.Instructions })\r\n                this.setState({ Ingredients: this.props.location.recipeProps.Ingredients })\r\n                this.setState({ Image: this.props.location.recipeProps.Image })\r\n                this.setState({ ImagePreview: this.props.location.recipeProps.Image })\r\n                this.setState({ ImageName: this.props.location.recipeProps.nameOfImage })\r\n                this.setState({ ID: this.props.location.recipeProps.ID })\r\n                this.setState({ isPublic: this.props.location.recipeProps.isPublic })\r\n            }\r\n\r\n            //Jak nie da rady pobierz z API\r\n        } catch (error) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = RecipesEndPointAPI.GetRecipeByID(this.props.match.params.id)\r\n            result.then(data => {\r\n                console.log(\"Pobrano przepis\")\r\n                this.setState({ RecipeName: data.name })\r\n                this.setState({ Instructions: data.instruction })\r\n                this.setState({ Ingredients: data.ingredients })\r\n                this.setState({ ImageName: data.nameOfImage })\r\n                this.setState({ ID: data.recipeId })\r\n                this.setState({ isPublic: data.isPublic })\r\n\r\n                this.setState({ DuringOperation: false })\r\n                this.DonwloadRecipeImage();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessage: obj.message })\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n\r\n        if (this.state.ImageName === null) {\r\n            this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n        }\r\n        else {\r\n\r\n            this.setState({ DuringOperation: true })\r\n            let result = RecipesEndPointAPI.DownloadImage(this.state.ImageName)\r\n            result.then(data => {\r\n                console.log(\"Pobrano obrazek\")\r\n                outside = URL.createObjectURL(data)\r\n                this.setState({ Image: outside })\r\n                this.setState({ ImagePreview: outside })\r\n                this.setState({ DuringOperation: false })\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleCheckboxChange = event =>\r\n    this.setState({ isPublic: event.target.checked })\r\n\r\n    handleIngredientAdd(e) {\r\n        const { IngredientsInput, Ingredients } = this.state;\r\n\r\n        const nextState = [...Ingredients, IngredientsInput];\r\n        this.setState({ Ingredients: nextState, IngredientsInput: '' });\r\n    }\r\n\r\n    handleRecipeClick(e) {\r\n        this.setState({ SelectedIngredient: e.target.innerHTML })\r\n    }\r\n\r\n    handleIngredientRemove(e) {\r\n        const { Ingredients, SelectedIngredient } = this.state;\r\n        const nextState = Ingredients.filter(x => x !== SelectedIngredient)\r\n        this.setState({ Ingredients: nextState, SelectedIngredient: \"\" });\r\n    }\r\n\r\n    onChangeFile(e) {\r\n        this.setState({ InfoMessage: \"\" })\r\n        let fileName = e.target.files[0].name\r\n        let fileExt = fileName.split('.').pop()\r\n\r\n        if (fileExt === \"jpg\" || fileExt === \"jpeg\" || fileExt === \"gif\" || fileExt === \"png\") {\r\n            this.setState({ Image: e.target.files[0] })\r\n            this.setState({ ImageName: fileName })\r\n\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            var url = reader.readAsDataURL(file);\r\n\r\n            reader.onloadend = function (e) {\r\n                this.setState({\r\n                    ImagePreview: [reader.result]\r\n                })\r\n            }.bind(this);\r\n        }\r\n        else {\r\n            this.setState({ InfoMessage: \"Wybierz poprawny format pliku!\" })\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if (this.CanSubmit()) {\r\n            this.setState({ DuringOperation: true })\r\n            this.setState({ InfoMessage: \"\"})\r\n\r\n            if (this.state.Edit) {\r\n                let result = RecipesEndPointAPI.PutRecipes(this.state.ID, this.state.ID, this.state.RecipeName, this.state.Instructions, this.state.Ingredients, this.state.Image, this.state.ImageName, this.state.isPublic)\r\n                result.then(data => {\r\n                    console.log(\"Przepis zaktualizowany\")\r\n                    this.setState({ DuringOperation: false })\r\n                    this.setState({ OperationComplete: true })\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                this.setState({ InfoMessage: obj.message })\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                let result = RecipesEndPointAPI.InsertRecipe(this.state.RecipeName, this.state.Instructions, this.state.Ingredients, this.state.Image, this.state.isPublic)\r\n                result.then(data => {\r\n                    console.log(\"Przepis dodany\")\r\n                    this.setState({ DuringOperation: false })\r\n                    this.setState({ OperationComplete: true })\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                this.setState({ InfoMessage: obj.message })\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    DeleteImage() {\r\n        this.setState({ ImageName: \"\" })\r\n        this.setState({ Image: null })\r\n        this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n\r\n    }\r\n\r\n    CanSubmit() {\r\n        let output = false;\r\n        if (this.state.RecipeName && this.state.Instructions && this.state.Ingredients.length > 0 && !this.state.DuringOperation && this.state.InfoMessage == \"\") {\r\n            output = true;\r\n        }\r\n        return output;\r\n    }\r\n\r\n    SubmitMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.InfoMessage != \"\") {\r\n            return (\r\n                <Alert className=\"text-center mt-3\"  variant=\"danger\">\r\n                {this.state.InfoMessage}\r\n              </Alert>\r\n              )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.OperationComplete === true) {\r\n            return <Redirect to='/UserRecipes' />\r\n        }\r\n\r\n        const ingredients = this.state.Ingredients.map(item =>\r\n            <ListGroup.Item as=\"li\" active={this.state.SelectedIngredient === item} className=\"Clickable\" action onClick={this.handleRecipeClick}>\r\n                {item}\r\n            </ListGroup.Item>\r\n        )\r\n\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n\r\n            return (\r\n\r\n                <Form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {this.SubmitMessage()}\r\n\r\n                                <Form.Group controlId=\"formName\">\r\n                                    {/* <Form.Label   className=\"text-center\" style={{width: \"100%\"}}>Nazwa przepisu:</Form.Label> */}\r\n                                    <h3 className=\"text-center mt-3\">Nazwa przepisu:</h3>\r\n                                    <Form.Control type=\"text\" size=\"lg\" name=\"RecipeName\" required onChange={this.handleChange} value={this.state.RecipeName} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n\r\n                            <Col md={8}>\r\n\r\n                                <Form.Group controlId=\"formInstructions\">\r\n                                    {/* <Form.Label className=\"text-center\" style={{width: \"100%\"}} >Przepis:</Form.Label> */}\r\n                                    <h3 className=\"text-center\">Przepis:</h3>\r\n                                    <Form.Control as=\"textarea\" style={{ height: \"400px\" }} size=\"lg\" type=\"text\" name=\"Instructions\" required onChange={this.handleChange} value={this.state.Instructions} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formIsPublic\">\r\n                                <Form.Check type=\"checkbox\" label=\"Przepis publiczny\" className=\"CheckBoxIsRecipePublic\" name=\"isPublic\" onChange={this.handleCheckboxChange} checked={this.state.isPublic} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <Form.Group controlId=\"formIngredients\">\r\n                                    {/* <Form.Label>Składniki</Form.Label> */}\r\n                                    <h3 className=\"text-center\">Składniki:</h3>\r\n                                    <Form.Control type=\"text\" name=\"IngredientsInput\" onChange={this.handleChange} value={this.state.IngredientsInput} />\r\n                                </Form.Group>\r\n\r\n                                <div class=\"d-flex justify-content-center mb-3\">\r\n                                    <Button disabled={!this.state.IngredientsInput} onClick={this.handleIngredientAdd} className=\"mr-3\">Dodaj</Button>\r\n                                    <Button disabled={!this.state.SelectedIngredient} onClick={this.handleIngredientRemove}>Usuń</Button>\r\n                                </div>\r\n                                <ListGroup id=\"IngredientsGroup\" as=\"ul\">\r\n                                    {ingredients}\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={12}>\r\n                                <h3 className=\"text-center\">Obrazek:</h3>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <div class=\"custom-file mb-3\">\r\n                                    <input id=\"formFile\" type=\"file\" class=\"custom-file-input\" accept=\".png, .jpg, .jpeg, .gif\" onChange={this.onChangeFile} />\r\n                                    <label class=\"custom-file-label\" for=\"inputGroupFile01\">Wybierz obrazek</label>\r\n\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col md={2}>\r\n                                <div class=\"custom-file mb-3\">\r\n\r\n                                    <div class=\"d-flex justify-content-center\">\r\n                                        <Button variant=\"primary\" onClick={this.DeleteImage} size=\"lg\" disabled={!this.state.ImageName}>\r\n                                            Usuń obrazek\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <img className=\"smallImg mx-auto d-block mb-3\" src={this.state.ImagePreview} />\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                    <Button variant=\"primary\" type=\"submit\" size=\"lg\" disabled={!this.CanSubmit()}>\r\n                                        {this.state.Edit ? \"Zaaktualizuj przepis\" : \"Dodaj przepis\"}\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <div class=\"d-flex justify-content-center mb-3\">\r\n                                    <Button variant=\"outline-primary\" as={Link} to=\"/UserRecipes\" className=\"mt-3\"  >\r\n                                        Wróć\r\n                                </Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default AddOrEdit ","import React from 'react';\r\n\r\nimport Header from '../src/components/Header';\r\nimport LoginForm from '../src/components/LoginForm';\r\nimport Main from '../src/Main';\r\nimport Recipes from '../src/components/Recipes'\r\nimport { Authentication } from '../src/helpers/Authentication'\r\nimport RecipePreview from '../src/components/RecipePreview'\r\nimport About from '../src/components/About'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport RegisterForm from './components/RegisterForm';\r\nimport AddOrEdit from './components/AddOrEdit';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n\r\n          <Route path=\"/Login\" component={LoginForm} />\r\n\r\n          <Route path=\"/Register\" component={RegisterForm} />\r\n\r\n          <Route path=\"/About\" component={About} />\r\n\r\n          <PrivateRoute path=\"/UserRecipes\" component={Recipes} />\r\n\r\n          <PrivateRoute path=\"/PublicRecipes\" component={Recipes} />\r\n\r\n          <PrivateRoute path=\"/FavouritesRecipes\" component={Recipes} />\r\n\r\n\r\n          <PrivateRoute path=\"/RecipePreview/:id\" component={RecipePreview} />\r\n\r\n          <PrivateRoute path=\"/Edit/:id\" component={AddOrEdit} />}/>\r\n\r\n          <PrivateRoute path=\"/\" component={Recipes} />\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, exact, strict, path, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    Authentication.isAuthenticated()\r\n      ? <Component {...props} />\r\n      : <Redirect to={{\r\n        pathname: '/Login',\r\n        state: { from: props.location }\r\n      }} />\r\n  )} />\r\n)\r\n\r\n// function PrivateRoute({ children, ...rest }) {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={({ location }) =>\r\n//       Authentication.isAuthenticated() ? (\r\n//           children\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: \"/Login\",\r\n//               state: { from: location }\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// }\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}