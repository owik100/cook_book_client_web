{"version":3,"sources":["logo.svg","helpers/Authentication.js","components/Header.js","helpers/AuthHeaders.js","API/APIHelper.js","components/LoginForm.js","Main.js","API/RecipesEndPointAPI.js","components/Recipes.js","components/RecipePreview.js","components/About.js","helpers/ScrollToTop.js","components/RegisterForm.js","components/AddOrEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Authentication","SaveToken","token","remember","Cookie","set","expires","LoadToken","get","LogOut","remove","isAuthenticated","SaveUserData","userJson","userName","email","id","favouriteRecipes","LoadUserEmail","LoadUserId","LoadUserName","LoadUserFavouritesRecipes","SaveFavouritesRecipes","NavIfLogged","onClick","Nav","className","Link","as","to","Header","useState","expanded","setExpanded","Navbar","variant","bg","sticky","expand","Brand","alt","src","process","width","height","Toggle","aria-controls","Collapse","Text","history","useHistory","push","AuthButton","AuthHeaders","GetBearer","APIHelper","Register","LogIn","GetUserData","EditUser","API_URL","Email","UserName","Password","ConfirmPassword","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","text","Promise","reject","catch","error","username","password","URLSearchParams","append","json","Authorization","FavouriteRecipes","Id","formdata","FormData","LoginForm","props","handleCheckboxChange","event","setState","RememberMe","target","checked","state","Login","InfoMessage","DuringOperation","isLogged","LogInfoMessage","handleChange","bind","handleSubmit","this","name","value","data","console","log","access_Token","ShowLogInfo","obj","parse","message","preventDefault","class","Spinner","animation","role","Alert","location","showInfoLog","Form","onSubmit","LoginMessage","RegisterSuccess","Group","controlId","Label","Control","type","required","placeholder","onChange","Check","label","Button","Row","Component","Main","RecipesEndPointAPI","GetAllRecipesLoggedUser","DownloadImage","DeleteRecipes","InsertRecipe","GetRecipeByID","PutRecipes","GetPublicRecipes","GetFavouritesRecipes","PageSize","PageNumber","blob","RecipeName","Instructions","IngredientsArr","Image","isPublic","Ingredients","join","RecipeId","NameOfImage","Recipes","UserOrPublicOrFavourites","CanNext","CanPrevious","TotalPages","PageNumberUserRecipes","PageNumberPublicRecipes","PageNumberFavouritesRecipes","NoUserRecipesInfo","NoFafouritesRecipesInfo","PreviousPage","NextPage","nextProps","CheckPath","pathName","window","hash","forEach","element","DisplayAsPublic","favourites","DisplayAsFavourite","includes","recipeId","DisplayAsFavourites","pageNumberUser","pageBackUser","pageNumberPublic","pageBackPublic","pageNumberFavourites","pageBackFavourites","undefined","pageNumber","LoadPublicRecipes","LoadUserRecipes","LoadFavouritesRecipes","AddDisplayAsPublicProperty","length","totalPages","NavigationButtonsActiveDeactive","DonwloadRecipeImage","LoadUserData","AddDisplayAsFavouritesProperty","outside","that","item","key","nameOfImage","image","map","el","URL","createObjectURL","actualPage","prevstate","recipes","Col","sm","md","lg","xl","pathname","recipeProps","UserOrPublicOrFavouritesProps","Container","fluid","size","disabled","RecipePreview","Name","ID","showModal","RecipeDeleted","LastVisit","PageBack","IsFavourite","handleModalClose","handleModalShow","handleRecipeDelete","handleFavouriteCLick","match","params","instruction","ingredients","PageBackUser","PageBackPublic","PageBackFavourites","localBoolFavourites","favourtesArr","index","indexOf","splice","arraySemicolon","Modal","centered","closeButton","Title","Body","Footer","delete","onHide","editButton","deleteButton","authorInfo","favouriteButton","ModalDelete","show","About","appVersion","setAppVersion","useEffect","href","rel","withRouter","unlisten","listen","scrollTo","RegisterForm","InfoMessageIsError","OperationSuccess","CanRegister","ClearForm","output","document","getElementById","reset","RegisterMessage","AddOrEdit","Edit","CanSubmit","IngredientsInput","SelectedIngredient","ImagePreview","ImageName","OperationComplete","onChangeFile","handleIngredientAdd","handleRecipeClick","handleIngredientRemove","DeleteImage","bsCustomFileInput","init","e","nextState","innerHTML","filter","x","fileName","files","fileExt","split","pop","file","reader","FileReader","readAsDataURL","onloadend","result","ListGroup","Item","active","action","SubmitMessage","style","accept","for","PrivateRoute","component","rest","exact","strict","path","render","from","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013bb6bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport Cookie from \"js-cookie\"\r\n\r\nexport const Authentication = {\r\n    SaveToken,\r\n    LoadToken,\r\n    LogOut,\r\n    isAuthenticated,\r\n    SaveUserData,\r\n    LoadUserEmail,\r\n    LoadUserId,\r\n    LoadUserName,\r\n    LoadUserFavouritesRecipes,\r\n    SaveFavouritesRecipes\r\n};\r\n\r\n\r\nfunction SaveToken(token, remember) {\r\n    if (remember) {\r\n        Cookie.set(\"JWT\", token, { expires: 7 });\r\n    }\r\n    else {\r\n        Cookie.set(\"JWT\", token)\r\n    }\r\n}\r\n\r\nfunction LoadToken() {\r\n    return Cookie.get(\"JWT\") ? Cookie.get(\"JWT\") : null;\r\n}\r\n\r\nfunction LogOut() {\r\n    Cookie.remove('JWT');\r\n    Cookie.remove('userName');\r\n    Cookie.remove('email');\r\n    Cookie.remove('id');\r\n}\r\n\r\nfunction isAuthenticated() {\r\n    return Cookie.get(\"JWT\") ? true : false;\r\n}\r\n\r\nfunction SaveUserData(userJson) {\r\n    Cookie.set(\"userName\", userJson.userName, { expires: 7 });\r\n    Cookie.set(\"email\", userJson.email, { expires: 7 });\r\n    Cookie.set(\"id\", userJson.id, { expires: 7 });\r\n    Cookie.set(\"favouriteRecipes\", userJson.favouriteRecipes, { expires: 7 });\r\n}\r\n\r\nfunction LoadUserName() {\r\n    return Cookie.get(\"userName\") ? Cookie.get(\"userName\") : null;\r\n}\r\n\r\nfunction LoadUserEmail() {\r\n    return Cookie.get(\"email\") ? Cookie.get(\"email\") : null;\r\n}\r\n\r\nfunction LoadUserId() {\r\n    return Cookie.get(\"id\") ? Cookie.get(\"id\") : null;\r\n}\r\n\r\nfunction LoadUserFavouritesRecipes() {\r\n    return Cookie.get(\"favouriteRecipes\") ? Cookie.get(\"favouriteRecipes\") : null;\r\n}\r\n\r\nfunction SaveFavouritesRecipes(favouriteRecipes)\r\n{\r\n    Cookie.set(\"favouriteRecipes\", favouriteRecipes, { expires: 7 });\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, useHistory, } from \"react-router-dom\";\r\nimport { Authentication } from '../helpers/Authentication'\r\n\r\n\r\nfunction AuthButton() {\r\n    let history = useHistory();\r\n    return Authentication.isAuthenticated() ? (\r\n\r\n        <Nav.Link\r\n            onClick={() => {\r\n                Authentication.LogOut(() => history.push(\"/\"));\r\n\r\n            }}\r\n            as={Link} to=\"/Login\">\r\n            Wyloguj\r\n          </Nav.Link>\r\n    ) : (\r\n            <Nav.Link as={Link} to=\"/Login\">\r\n                Zaloguj się\r\n     </Nav.Link>\r\n        );\r\n}\r\n\r\nfunction GetName() {\r\n    if (Authentication.LoadUserName() != null && Authentication.isAuthenticated()) {\r\n        return (\r\n            <Navbar.Text className=\"AboutUser\">\r\n                Witaj {Authentication.LoadUserName() +\"!\"}\r\n            </Navbar.Text>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction NavIfLogged({ onClick }) {\r\n  \r\n    if (Authentication.LoadUserName() != null && Authentication.isAuthenticated()) {\r\n        return (\r\n            <Nav className=\"mr-auto\" onClick={onClick} >\r\n                <Nav.Link as={Link} to=\"/Edit/0\" >Dodaj przepis</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/UserRecipes\" >Moje przepisy</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/PublicRecipes\" >Odkrywaj przepisy</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/FavouritesRecipes\" >Ulubione przepisy</Nav.Link>\r\n            </Nav>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const Close = () => {\r\n        setExpanded(false)}\r\n\r\n    return (\r\n        <header>\r\n            <Navbar expanded={expanded} variant=\"dark\" bg=\"primary\" sticky=\"top\" expand=\"lg\">\r\n                <Navbar.Brand  as={Link} to=\"/UserRecipes\">  <img\r\n        alt=\"logo\"\r\n        src= {process.env.REACT_APP_PUBLIC_URL +  '/blankicon256.png'}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '} Cook Book</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <NavIfLogged onClick={Close}/>\r\n                    <Nav className=\"justify-content-end\" onClick={() => setExpanded(false)}>\r\n                    <Nav.Link className=\"mr-3\" as={Link} to=\"/About\" >O aplikacji</Nav.Link>\r\n                        {GetName()}\r\n                        {AuthButton()}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Authentication } from \"../helpers/Authentication\"\r\n\r\nexport const AuthHeaders = {\r\n    GetBearer,\r\n};\r\n\r\nfunction GetBearer() {\r\n    let authHeader = 'bearer ' + Authentication.LoadToken()\r\n\r\n    return authHeader;\r\n}\r\n\r\n","import React from 'react';\r\nimport { AuthHeaders } from '../helpers/AuthHeaders'\r\nimport { Authentication } from '../helpers/Authentication'\r\n\r\nexport const APIHelper = {\r\n    Register,\r\n    LogIn,\r\n    GetUserData,\r\n    EditUser\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nasync function Register(Email, UserName, Password, ConfirmPassword) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ Email, UserName, Password, ConfirmPassword })\r\n    };\r\n\r\n    return await fetch(API_URL + '/api/Account/register', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n};\r\n\r\n\r\nasync function LogIn(username, password) {\r\n\r\n    let body = new URLSearchParams();\r\n    body.append(\"grant_type\", \"password\");\r\n    body.append(\"username\", username);\r\n    body.append(\"password\", password);\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        body: body\r\n    };\r\n\r\n    return await fetch(API_URL + '/token', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n};\r\n\r\n\r\nasync function GetUserData() {\r\n\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await fetch(API_URL + '/api/User', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function EditUser(FavouriteRecipes) {\r\n\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Id = Authentication.LoadUserId();\r\n    let UserName = Authentication.LoadUserName();\r\n    let Email = Authentication.LoadUserEmail();\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Id\", Id);\r\n    formdata.append(\"UserName\", UserName);\r\n    formdata.append(\"Email\", Email);\r\n    formdata.append(\"FavouriteRecipes\", FavouriteRecipes);\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/User/${Id}`, requestOptions)\r\n    .then(response => {\r\n        // reject not ok response\r\n        if (!response.ok) {\r\n            return Promise.reject(response)\r\n        }\r\n        return response.text()\r\n    })\r\n    // catch error response and extract the error message\r\n    .catch(async response => {\r\n        const error = await response.text().then(text => text)\r\n        return Promise.reject(error)\r\n    })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, Spinner, Alert, Row, Col, Toast } from 'react-bootstrap';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            Login: \"\",\r\n            Password: \"\",\r\n            RememberMe: false,\r\n            InfoMessage: \"\",\r\n            DuringOperation: false,\r\n            isLogged: false,\r\n            LogInfoMessage : \"Rejestracja pomyślna. Możesz się teraz zalogować!\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Authentication.isAuthenticated()) {\r\n            this.setState({ isLogged: true })\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleCheckboxChange = event =>\r\n    this.setState({ RememberMe: event.target.checked })\r\n\r\n    handleSubmit(event) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = APIHelper.LogIn(this.state.Login, this.state.Password)\r\n        result.then(data => {\r\n            console.log(\"Zalogowano\")\r\n            this.setState({ InfoMessage: \"\" })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            Authentication.SaveToken(data.access_Token, this.state.RememberMe)\r\n            this.GetUserData();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ ShowLogInfo: false })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ ShowLogInfo: false })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    GetUserData() {\r\n        let result = APIHelper.GetUserData()\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            Authentication.SaveUserData(data);\r\n            this.setState({ isLogged: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ ShowLogInfo: false })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ ShowLogInfo: false })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    LoginMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.InfoMessage != \"\") {\r\n                return (\r\n                    <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                    {this.state.InfoMessage}\r\n                </Alert>\r\n                );\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    RegisterSuccess(){\r\n\r\n        let info = this.props.location.showInfoLog\r\n\r\n        if(info === true)\r\n       {\r\n            return (\r\n                <Alert className=\"text-center mt-3\" variant=\"success\">\r\n                {this.state.LogInfoMessage}\r\n            </Alert>\r\n            );\r\n        }\r\n        else {\r\n            return null\r\n            }\r\n        }\r\n    \r\n\r\n    render() {\r\n        if (this.state.isLogged === true) {\r\n            return <Redirect to='/UserRecipes' />\r\n        }\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <h1 className=\"display-3 text-center mt-5\">Logowanie</h1>\r\n\r\n                            {this.LoginMessage()}\r\n                            {this.RegisterSuccess()}\r\n\r\n                            <Form.Group controlId=\"formLogin\">\r\n                                <Form.Label>Login</Form.Label>\r\n                                <Form.Control type=\"text\" required placeholder=\"Enter login\" name=\"Login\" onChange={this.handleChange} value={this.state.Login} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <Form.Control type=\"password\" required placeholder=\"Password\" name=\"Password\" onChange={this.handleChange} value={this.state.Password} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formRemember\">\r\n                                <Form.Check type=\"checkbox\" label=\"Zapamiętaj\" name=\"RememberMe\" onChange={this.handleCheckboxChange} checked={this.state.RememberMe} />\r\n                            </Form.Group>\r\n\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Zaloguj\r\n                        </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"lead text-center mt-3\">Nie masz jeszcze konta? Zarejestruj się!</h1>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Button variant=\"outline-primary\" as={Link} to=\"/Register\"  >\r\n                        Zarejestruj\r\n            </Button>\r\n                </div>\r\n                <Row>\r\n\r\n \r\n    </Row>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {Authentication} from '../src/helpers/Authentication'\r\n\r\nfunction Main()\r\n{\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a>\r\n        </header>\r\n        <button\r\n        onClick={() => {\r\n          Authentication.DeleteToken();\r\n        }}\r\n      >\r\n        Sign out\r\n      </button>\r\n      </div>\r\n    ) \r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport { AuthHeaders } from '../helpers/AuthHeaders'\r\n\r\nexport const RecipesEndPointAPI = {\r\n    GetAllRecipesLoggedUser,\r\n    DownloadImage,\r\n    DeleteRecipes,\r\n    InsertRecipe,\r\n    GetRecipeByID,\r\n    PutRecipes,\r\n    GetPublicRecipes,\r\n    GetFavouritesRecipes\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nasync function GetRecipeByID(Id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/Recipes/${Id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function GetAllRecipesLoggedUser(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/CurrentUserRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function GetPublicRecipes(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetPublicRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\nasync function GetFavouritesRecipes(PageSize, PageNumber) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetFavouritesRecipes/${PageSize}/${PageNumber}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.json()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function DownloadImage(id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/GetPhoto/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.blob()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function DeleteRecipes(id) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization,\r\n        },\r\n    };\r\n\r\n    return await  fetch(API_URL + `/api/Recipes/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\n\r\nasync function InsertRecipe(RecipeName, Instructions, IngredientsArr, Image, isPublic) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Ingredients = IngredientsArr.join(\";\");\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Name\", RecipeName);\r\n    formdata.append(\"Instruction\", Instructions);\r\n    formdata.append(\"Ingredients\", Ingredients);\r\n    formdata.append(\"Image\", Image);\r\n    formdata.append(\"isPublic\", isPublic);\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await  fetch(API_URL + '/api/Recipes/', requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}\r\n\r\nasync function PutRecipes(id, RecipeId, RecipeName, Instructions, IngredientsArr, Image, NameOfImage, isPublic) {\r\n    let Authorization = AuthHeaders.GetBearer()\r\n\r\n    let Ingredients = IngredientsArr.join(\";\");\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"Name\", RecipeName);\r\n    formdata.append(\"Instruction\", Instructions);\r\n    formdata.append(\"Ingredients\", Ingredients);\r\n    formdata.append(\"Image\", Image);\r\n    formdata.append(\"NameOfImage\", NameOfImage);\r\n    formdata.append(\"RecipeId\", RecipeId);\r\n    formdata.append(\"isPublic\", isPublic);\r\n\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: {\r\n            Authorization,\r\n        },\r\n        body: formdata,\r\n    };\r\n\r\n    return await fetch(API_URL + `/api/Recipes/${id}`, requestOptions)\r\n        .then(response => {\r\n            // reject not ok response\r\n            if (!response.ok) {\r\n                return Promise.reject(response)\r\n            }\r\n            return response.text()\r\n        })\r\n        // catch error response and extract the error message\r\n        .catch(async response => {\r\n            const error = await response.text().then(text => text)\r\n            return Promise.reject(error)\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col, Alert, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass Recipes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            DuringOperation: false,\r\n            UserOrPublicOrFavourites: \"User\",\r\n            InfoMessage: \"\",\r\n            Recipes: [],\r\n            CanNext : false,\r\n            CanPrevious: false,\r\n            PageSize : 15,\r\n            TotalPages : 1,\r\n            PageNumberUserRecipes : 1,\r\n            PageNumberPublicRecipes : 1,\r\n            PageNumberFavouritesRecipes : 1,\r\n            NoUserRecipesInfo : false,\r\n            NoFafouritesRecipesInfo : false,\r\n        }\r\n\r\n        this.PreviousPage = this.PreviousPage.bind(this);\r\n        this.NextPage = this.NextPage.bind(this);\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n       this.CheckPath()\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.CheckPath()\r\n    }\r\n\r\n\r\n    AddDisplayAsPublicProperty(data)\r\n    {\r\n        let pathName = window.location.hash;\r\n\r\n        data.forEach(function (element) {\r\n            element.DisplayAsPublic = false;\r\n            if(element.isPublic && element.userName === Authentication.LoadUserName() && (pathName === \"#/PublicRecipes\" || pathName === \"#/UserRecipes\"|| pathName === \"#/\" || pathName === \"/\"))\r\n            {\r\n                element.DisplayAsPublic = true;\r\n            }\r\n            else{\r\n                element.DisplayAsPublic = false;\r\n            }   \r\n          });\r\n    }\r\n\r\n    AddDisplayAsFavouritesProperty(data)\r\n    {\r\n        let pathName = window.location.hash;\r\n        let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n        data.forEach(function (element) {\r\n            element.DisplayAsFavourite = false;\r\n            if(pathName === \"#/PublicRecipes\" && favourites.includes(element.recipeId))\r\n            {\r\n                element.DisplayAsFavourite = true;\r\n            }\r\n            else{\r\n                element.DisplayAsFavourites = false;\r\n            }   \r\n          });\r\n    }\r\n\r\n    CheckPath()\r\n    {\r\n        try {\r\n            let pathName = window.location.hash;\r\n\r\n        let pageNumberUser = this.props.location.pageBackUser\r\n        let pageNumberPublic = this.props.location.pageBackPublic\r\n        let pageNumberFavourites = this.props.location.pageBackFavourites\r\n\r\n        if(pageNumberUser != undefined)\r\n        this.setState({ PageNumberUserRecipes: pageNumberUser})\r\n\r\n        if(pageNumberPublic != undefined)\r\n        this.setState({ PageNumberPublicRecipes: pageNumberPublic})\r\n\r\n        if(pageNumberFavourites != undefined)\r\n        this.setState({ PageNumberFavouritesRecipes: pageNumberFavourites})\r\n\r\n             if (pathName === \"#/PublicRecipes\") {\r\n                let pageNumber = this.props.location.pageBackPublic\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberPublicRecipes\r\n\r\n                 this.setState({ PageNumberPublicRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"Public\" })\r\n                 this.LoadPublicRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else if(pathName === \"#/UserRecipes\") {\r\n                let pageNumber = this.props.location.pageBackUser\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberUserRecipes\r\n\r\n                this.setState({ PageNumberUserRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n                 this.LoadUserRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else if(pathName === \"#/FavouritesRecipes\") {\r\n                let pageNumber = this.props.location.pageBackFavourites\r\n                if(pageNumber === undefined)\r\n                pageNumber = this.state.PageNumberFavouritesRecipes\r\n\r\n                this.setState({ PageNumberFavouritesRecipes: pageNumber})\r\n                 this.setState({ UserOrPublicOrFavourites: \"Favourites\" })\r\n                 this.LoadFavouritesRecipes(this.state.PageSize, pageNumber)\r\n             }\r\n             else{\r\n                this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n                this.LoadUserRecipes(this.state.PageSize, this.state.PageNumberUserRecipes)\r\n             }\r\n \r\n \r\n         } catch (error) {\r\n             this.setState({ UserOrPublicOrFavourites: \"User\" })\r\n             this.LoadUserRecipes(this.state.PageSize, this.state.PageNumberUserRecipes)\r\n         }\r\n    }\r\n\r\n    LoadUserRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = RecipesEndPointAPI.GetAllRecipesLoggedUser(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            this.AddDisplayAsPublicProperty(data)\r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n\r\n                this.setState({NoUserRecipesInfo : false})\r\n                this.setState({NoFafouritesRecipesInfo : false})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})     \r\n\r\n                this.setState({NoUserRecipesInfo : true})\r\n                this.setState({NoFafouritesRecipesInfo : false})\r\n            }\r\n\r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    LoadPublicRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        this.LoadUserData();\r\n\r\n        let result = RecipesEndPointAPI.GetPublicRecipes(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            this.AddDisplayAsPublicProperty(data)\r\n            this.AddDisplayAsFavouritesProperty(data)\r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n\r\n                this.setState({NoUserRecipesInfo : false})\r\n                this.setState({NoFafouritesRecipesInfo : false})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})\r\n\r\n                this.setState({NoUserRecipesInfo : false})\r\n                this.setState({NoFafouritesRecipesInfo : false})\r\n            }\r\n\r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    LoadFavouritesRecipes(PageSize, PageNumber) {\r\n        this.setState({ DuringOperation: true })\r\n\r\n        let result = RecipesEndPointAPI.GetFavouritesRecipes(PageSize, PageNumber)\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n           \r\n            this.setState({ Recipes: data })\r\n            this.setState({ DuringOperation: false })\r\n\r\n            if(data.length > 0)\r\n            {\r\n                this.setState({TotalPages : data[0].totalPages})\r\n\r\n                this.setState({NoUserRecipesInfo : false})\r\n                this.setState({NoFafouritesRecipesInfo : false})\r\n            }\r\n            else{\r\n                this.setState({TotalPages : 1})\r\n\r\n                this.setState({NoUserRecipesInfo : false})\r\n                this.setState({NoFafouritesRecipesInfo : true})\r\n            }\r\n            \r\n            this.NavigationButtonsActiveDeactive(PageNumber)\r\n            this.DonwloadRecipeImage();\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    this.setState({ InfoMessage: \"Problem z połączeniem\" })\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    //Get user favourites recipes - All. \r\n    LoadUserData()\r\n    {\r\n        let result = APIHelper.GetUserData()\r\n\r\n        result.then(data => {\r\n            console.log(\"Pobrano dane użytkownika\")\r\n            Authentication.SaveUserData(data);\r\n            this.setState({ isLogged: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                    this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                    this.setState({ DuringOperation: false })\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                        this.setState({ InfoMessage: obj.message })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n        //this.setState({ DuringOperation: true })\r\n\r\n        this.state.Recipes.forEach(function (item, key) {\r\n\r\n            if (item.nameOfImage === null) {\r\n                item.image =  process.env.REACT_APP_PUBLIC_URL +'/food template.png'\r\n                that.setState({\r\n                    Recipes: that.state.Recipes.map(el => (el.recipeId === item.recipeId ? { ...el, item } : el))\r\n                });\r\n            }\r\n            else {\r\n                let result = RecipesEndPointAPI.DownloadImage(item.nameOfImage)\r\n                result.then(data => {\r\n                    outside = URL.createObjectURL(data)\r\n                    item.image = outside\r\n                    that.setState({\r\n                        Recipes: that.state.Recipes.map(el => (el.recipeId === item.recipeId ? { ...el, item } : el))\r\n                    });\r\n                    that.setState({ DuringOperation: false })\r\n\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            that.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                that.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                                that.setState({ DuringOperation: false })\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n        });\r\n    }\r\n\r\n    PreviousPage(){\r\n      if(this.state.UserOrPublicOrFavourites === \"User\")\r\n      {\r\n\r\n        let actualPage = this.state.PageNumberUserRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberUserRecipes: prevstate.PageNumberUserRecipes - 1}));\r\n          this.LoadUserRecipes(this.state.PageSize, actualPage - 1)\r\n      }\r\n      else if(this.state.UserOrPublicOrFavourites === \"Public\"){\r\n\r\n        let actualPage = this.state.PageNumberPublicRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberPublicRecipes: prevstate.PageNumberPublicRecipes - 1}));\r\n          this.LoadPublicRecipes(this.state.PageSize, actualPage - 1)\r\n      }  \r\n    else if(this.state.UserOrPublicOrFavourites === \"Favourites\"){\r\n\r\n        let actualPage = this.state.PageNumberFavouritesRecipes;\r\n\r\n        this.setState(prevstate => ({ PageNumberFavouritesRecipes: prevstate.PageNumberFavouritesRecipes - 1}));\r\n          this.LoadFavouritesRecipes(this.state.PageSize, actualPage - 1)\r\n    }\r\n}\r\n\r\n    NextPage()\r\n    {\r\n        if(this.state.UserOrPublicOrFavourites === \"User\")\r\n        {\r\n\r\n            let actualPage = this.state.PageNumberUserRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberUserRecipes: prevstate.PageNumberUserRecipes + 1}));\r\n            this.LoadUserRecipes(this.state.PageSize, actualPage + 1)\r\n        }\r\n        else if(this.state.UserOrPublicOrFavourites === \"Public\"){\r\n            let actualPage = this.state.PageNumberPublicRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberPublicRecipes: prevstate.PageNumberPublicRecipes + 1}));\r\n            this.LoadPublicRecipes(this.state.PageSize, actualPage + 1)\r\n        } \r\n        else if(this.state.UserOrPublicOrFavourites === \"Favourites\"){\r\n\r\n            let actualPage = this.state.PageNumberFavouritesRecipes;\r\n\r\n            this.setState(prevstate => ({ PageNumberFavouritesRecipes: prevstate.PageNumberFavouritesRecipes + 1}));\r\n            this.LoadFavouritesRecipes(this.state.PageSize, actualPage + 1)\r\n    }\r\n}\r\n\r\n    NavigationButtonsActiveDeactive(pageNumber)\r\n    {\r\n        if (pageNumber <= 1)\r\n        {\r\n            this.setState({CanPrevious : false});\r\n        }\r\n        else\r\n        {\r\n            this.setState({CanPrevious : true});\r\n        }\r\n\r\n        if (pageNumber >= this.state.TotalPages)\r\n        {\r\n            this.setState({CanNext : false});\r\n        }\r\n        else\r\n        {\r\n            this.setState({CanNext : true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        } else if (this.state.InfoMessage != \"\") {\r\n            return (\r\n                <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                    {this.state.InfoMessage}\r\n                </Alert>\r\n            )\r\n        }\r\n        else {\r\n\r\n            const recipes = this.state.Recipes.map(item =>{\r\n                return(\r\n                    <Col sm={4} md={3} lg={2} xl={2} as={Link} to={\r\n                        {\r\n                            pathname: `/RecipePreview/${item.recipeId}`,\r\n                            recipeProps: item,\r\n                            UserOrPublicOrFavouritesProps: this.state.UserOrPublicOrFavourites,\r\n                            pageBackUser: this.state.PageNumberUserRecipes,\r\n                            pageBackPublic: this.state.PageNumberPublicRecipes,\r\n                            pageBackFavourites: this.state.PageNumberFavouritesRecipes\r\n                        }} \r\n                         className={ item.DisplayAsPublic ? 'PublicRecipe' : item.DisplayAsFavourite ? 'FavouriteRecipe' : \"NormalRecipe\"} key={item.recipeId}>\r\n    \r\n                        <div className=\"mt-3 singleRecipe\" >\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <img src={item.image} alt=\"recipe image\"  />\r\n                            </div>\r\n                            <p className=\"text-center\"> {item.name}</p>\r\n                        </div>\r\n                    </Col>\r\n                )\r\n           })\r\n                \r\n            return (\r\n                <Container fluid>\r\n                    <Row className=\"justify-content-center\">\r\n                        {recipes}\r\n\r\n                        <Col md={12}>\r\n                        <div className=\"d-flex justify-content-center mt-3\">\r\n                        <Button className=\"mr-3 mb-3\" variant=\"primary\" size=\"lg\" disabled={!this.state.CanPrevious} onClick={this.PreviousPage}> &lt;= </Button>\r\n                        <p className=\"mr-3 \">\r\n                        {(() => {\r\n                            switch (this.state.UserOrPublicOrFavourites) {\r\n                            case \"User\":   return \"Strona \" + this.state.PageNumberUserRecipes + \" z \" + this.state.TotalPages;\r\n                            case \"Public\": return \"Strona \" + this.state.PageNumberPublicRecipes + \" z \" + this.state.TotalPages;\r\n                            case \"Favourites\":  return \"Strona \" + this.state.PageNumberFavouritesRecipes + \" z \" + this.state.TotalPages;\r\n                            default:      return \"Strona \" + this.state.PageNumberUserRecipes + \" z \" + this.state.TotalPages;\r\n                            }\r\n                        })()}\r\n                        </p>\r\n                         <Button className=\"mb-3\" variant=\"primary\" size=\"lg\" disabled={!this.state.CanNext} onClick={this.NextPage}> =&gt; </Button>\r\n\r\n                        </div>\r\n                       \r\n                        </Col>\r\n\r\n                    <div className=\"mt-3\"><p>{this.state.NoUserRecipesInfo ? \"Nie masz żadnych przepisów. Dodaj kilka!\" : null}</p></div>\r\n                    <div className=\"mt-3\"><p>{this.state.NoFafouritesRecipesInfo ? \"Nie masz żadnych ulubionych przepisów. Dodaj jakieś naciskając gwiazdkę!\" : null }</p></div>\r\n\r\n                    </Row>\r\n                </Container>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Recipes","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col, Alert, Button, Modal } from 'react-bootstrap';\r\nimport { Authentication } from \"../helpers/Authentication\"\r\nimport { APIHelper } from '../API/APIHelper';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nexport * from 'react-router';\r\n\r\nclass RecipePreview extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Name: \"\",\r\n            Instructions: \"\",\r\n            Ingredients: [],\r\n            Image: \"\",\r\n            nameOfImage: \"\",\r\n            ID: \"\",\r\n            isPublic: false,\r\n            userName: \"\",\r\n            showModal: false,\r\n            RecipeDeleted: false,\r\n            DuringOperation: false,\r\n            InfoMessage: \"\",\r\n            LastVisit : \"\",\r\n            PageBack: \"1\",\r\n            IsFavourite: false,\r\n        }\r\n\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n        this.handleModalShow = this.handleModalShow.bind(this);\r\n        this.handleRecipeDelete = this.handleRecipeDelete.bind(this);\r\n        this.handleFavouriteCLick = this.handleFavouriteCLick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //Pobierz przepis z przeslanych propsow. Gdy strona odswiezana/ nie ma propsow, pobierz z API\r\n        console.log(this.props.match.params.id)\r\n        try {\r\n            this.setState({ Name: this.props.location.recipeProps.item.name })\r\n            this.setState({ Instructions: this.props.location.recipeProps.item.instruction })\r\n            this.setState({ Ingredients: this.props.location.recipeProps.item.ingredients })\r\n            this.setState({ Image: this.props.location.recipeProps.item.image })\r\n            this.setState({ ID: this.props.location.recipeProps.item.recipeId })\r\n            this.setState({ nameOfImage: this.props.location.recipeProps.item.nameOfImage })\r\n            this.setState({ isPublic: this.props.location.recipeProps.item.isPublic })\r\n            this.setState({ userName: this.props.location.recipeProps.item.userName })\r\n            this.setState({ PageBackUser: (this.props.location.pageBackUser)})\r\n            this.setState({ PageBackPublic: (this.props.location.pageBackPublic)})\r\n            this.setState({ PageBackFavourites: (this.props.location.pageBackFavourites)})\r\n\r\n            let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n            if(favourites.includes(this.props.location.recipeProps.item.recipeId )){\r\n                this.setState({ IsFavourite: (true)})\r\n            }\r\n\r\nif(this.props.location.UserOrPublicOrFavouritesProps === \"User\")\r\n{\r\n    this.setState({ LastVisit: \"/UserRecipes\"})\r\n}\r\nelse if (this.props.location.UserOrPublicOrFavouritesProps === \"Public\")\r\n{\r\n    this.setState({ LastVisit: \"/PublicRecipes\"})\r\n}\r\nelse{\r\n    this.setState({ LastVisit: \"/FavouritesRecipes\"})\r\n}       \r\n        } catch (error) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = RecipesEndPointAPI.GetRecipeByID(this.props.match.params.id)\r\n            result.then(data => {\r\n                console.log(\"Pobrano przepis \")\r\n                this.setState({ Name: data.name })\r\n                this.setState({ Instructions: data.instruction })\r\n                this.setState({ Ingredients: data.ingredients })\r\n                this.setState({ nameOfImage: data.nameOfImage })\r\n                this.setState({ ID: data.recipeId })\r\n                this.setState({ isPublic: data.isPublic })\r\n                this.setState({ userName: data.userName })\r\n\r\n                this.setState({ LastVisit: \"/UserRecipes\"})\r\n\r\n                let favourites = Authentication.LoadUserFavouritesRecipes()\r\n\r\n                if(favourites.includes(data.recipeId )){\r\n                    this.setState({ IsFavourite: (true)})\r\n                }\r\n\r\n                this.setState({ DuringOperation: false })\r\n                this.DonwloadRecipeImage();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessage: \"Problem z połączeniem\"})\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessage: obj.message})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n\r\n        if (this.state.nameOfImage === null) {\r\n            this.setState({ Image: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n        }\r\n        else {\r\n\r\n            this.setState({ DuringOperation: true })\r\n            let result = RecipesEndPointAPI.DownloadImage(this.state.nameOfImage)\r\n            result.then(data => {\r\n                console.log(\"Pobrano obrazek\")\r\n                outside = URL.createObjectURL(data)\r\n                this.setState({ Image: outside })\r\n                this.setState({ DuringOperation: false })\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleModalShow(event) {\r\n        this.setState({ showModal: true })\r\n\r\n    }\r\n\r\n    handleModalClose(event) {\r\n        this.setState({ showModal: false })\r\n\r\n    }\r\n\r\n    handleFavouriteCLick(event) {\r\n\r\n        let localBoolFavourites = false;\r\n        let favourites = Authentication.LoadUserFavouritesRecipes()\r\n        let favourtesArr = JSON.parse(favourites);\r\n\r\n        if(this.state.IsFavourite){     \r\n            localBoolFavourites = true;\r\n\r\n            const index = favourtesArr.indexOf(this.state.ID);\r\n            if (index > -1) {\r\n                favourtesArr.splice(index, 1);\r\n            }\r\n        }\r\n        else{\r\n            localBoolFavourites = false;\r\n\r\n            favourtesArr.push(this.state.ID) \r\n        }\r\n\r\n        let arraySemicolon= favourtesArr.join(';')\r\n            \r\n            let result =  APIHelper.EditUser(arraySemicolon)\r\n\r\n            result.then(data => {\r\n                if(localBoolFavourites){\r\n                    console.log(\"Usunięto z ulubionych!\")\r\n                    this.setState({ IsFavourite: (false)})\r\n                }\r\n                else{\r\n                    console.log(\"Dodano do ulubionych!\")\r\n                    this.setState({ IsFavourite: (true)})\r\n                }\r\n\r\n                Authentication.SaveFavouritesRecipes(favourtesArr)\r\n               \r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                })\r\n\r\n        \r\n\r\n    }\r\n\r\n    ModalDelete(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Na pewno chcesz usunąć ten przepis? Operacji nie można cofnąć!\r\n              </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={props.delete}>Usuń</Button>\r\n                    <Button variant=\"dark\" onClick={props.onHide}>Cofnij</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    handleRecipeDelete(event) {\r\n        let result = RecipesEndPointAPI.DeleteRecipes(this.state.ID)\r\n\r\n        result.then(data => {\r\n            console.log(\"Usunięto!\")\r\n            this.setState({ RecipeDeleted: true })\r\n        })\r\n            .catch(error => {\r\n                //Connection problem\r\n                if (error == \"TypeError: response.text is not a function\") {\r\n                    console.log('Problem z połączeniem')\r\n                }\r\n                else {\r\n                    try {\r\n                        var obj = JSON.parse(error)\r\n                        console.log(obj.message)\r\n                    }\r\n                    //Another problem...\r\n                    catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.RecipeDeleted === true) {\r\n            return <Redirect to='/Recipes' />\r\n        }\r\n\r\n        let editButton;\r\n        let deleteButton;\r\n        let authorInfo;\r\n        let favouriteButton;\r\n\r\n        if (!this.state.isPublic || this.state.userName === Authentication.LoadUserName()) \r\n        {      editButton =  <Button size=\"lg\" variant=\"outline-dark\" className=\"mr-3 mt-3 mb-3 mx-auto d-block\" as={Link} to={\r\n            {\r\n                pathname: `/Edit/${this.state.ID}`,\r\n                recipeProps: this.state\r\n            }}  >Edytuj</Button> \r\n        \r\n            deleteButton =  <Button onClick={this.handleModalShow} size=\"lg\" variant=\"outline-danger\" className=\"mt-3 mb-3  mx-auto d-block\">Usuń</Button>\r\n        \r\n            authorInfo = null;\r\n            favouriteButton = null;\r\n        } \r\n\r\n        else \r\n        {   editButton = null\r\n            deleteButton = null\r\n\r\n        authorInfo = <p  className=\"text-center\">Autor przepisu: {this.state.userName}</p>\r\n\r\n        favouriteButton =  <Button onClick={this.handleFavouriteCLick} size=\"lg\" variant=\"outline-warning\" className=\"mt-3 mb-3  mx-auto d-block\"> <img className=\"img-fluid imgStar\" \r\n         src= {this.state.IsFavourite ? process.env.REACT_APP_PUBLIC_URL +'/starFull.png' : process.env.REACT_APP_PUBLIC_URL + '/starEmpty.png'} alt=\"star image\" /> </Button>\r\n\r\n         }\r\n\r\n        const ingredients = this.state.Ingredients.map(item =>\r\n            <li>\r\n                {item}\r\n            </li>)\r\n\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        } else if(this.state.InfoMessage != \"\")\r\n        {\r\n            return (\r\n            <Alert className=\"text-center mt-3\"  variant=\"danger\">\r\n            {this.state.InfoMessage}\r\n          </Alert>\r\n          )\r\n        }\r\n        else {\r\n            return (\r\n\r\n                <div>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <h1 className=\"mt-3 mb-3 text-center\">{this.state.Name}</h1>\r\n                            </Col>\r\n\r\n                            <Col md={12}>\r\n                                <p className=\"ml-2 mr-2\" >{this.state.Instructions}</p>\r\n                            </Col>\r\n\r\n                            <Col md={4} className=\"align-self-center\">\r\n                                <ul>\r\n                                    {ingredients}\r\n                                </ul>\r\n                            </Col>\r\n\r\n                            <Col md={8}>\r\n                                <img className=\"img-fluid mx-auto d-block\" src={this.state.Image} alt=\"recipe image\" ></img>\r\n                            </Col>\r\n\r\n                            <Col  >\r\n                                <Button size=\"lg\" variant=\"outline-dark\" className=\"mr-3 mt-3 mb-3 mx-auto d-block\" as={Link} to={\r\n                    {\r\n                        pathname: this.state.LastVisit,\r\n                        pageBackUser: this.state.PageBackUser,\r\n                        pageBackPublic: this.state.PageBackPublic,\r\n                        pageBackFavourites: this.state.PageBackFavourites,\r\n                    }} >Powrót</Button>\r\n                            </Col>\r\n\r\n                            <Col className=\"align-self-center\" >\r\n                               {editButton}\r\n                               {authorInfo}\r\n                           \r\n                            </Col>\r\n                            <Col  >\r\n                               {deleteButton}\r\n                               {favouriteButton}\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <this.ModalDelete\r\n                        show={this.state.showModal}\r\n                        onHide={this.handleModalClose}\r\n                        name={this.state.Name}\r\n                        delete={this.handleRecipeDelete}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default RecipePreview","import React, { useState, useEffect } from 'react'\r\n\r\nfunction About()\r\n{\r\n    const [appVersion, setAppVersion] = useState();\r\n\r\n    const ReactAppVersion = process.env.REACT_APP_VERSION;\r\n\r\n    useEffect(() => {setAppVersion(ReactAppVersion)});\r\n\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src = {process.env.REACT_APP_PUBLIC_URL + '/blankicon256.png'} alt=\"logo\"/>\r\n          <p>\r\n           CookBook {appVersion}\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://github.com/owik100/cook_book_client_web\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            GitHub\r\n          </a>\r\n        </header>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default About","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react'\r\nimport { Form, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { APIHelper } from '../API/APIHelper';\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Email: \"\",\r\n            Login: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            InfoMessage: \"\",\r\n            InfoMessageIsError: false,\r\n            DuringOperation: false,\r\n            OperationSuccess: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if (this.CanRegister()) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = APIHelper.Register(this.state.Email, this.state.Login, this.state.Password, this.state.ConfirmPassword);\r\n            result.then(data => {\r\n                console.log(\"Rejestracja pomyślna! Możesz teraz się zalogować.\")\r\n                this.setState({ InfoMessage: \"Rejestracja pomyślna! Możesz teraz się zalogować.\" })\r\n                this.setState({ InfoMessageIsError: false })\r\n                this.setState({ DuringOperation: false })\r\n                this.setState({ OperationSuccess: true })\r\n                this.ClearForm();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessageIsError: true })\r\n                        this.setState({ InfoMessage: 'Problem z połączeniem' })\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessageIsError: true })\r\n                            this.setState({ InfoMessage: obj.message })\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    CanRegister() {\r\n        let output = false;\r\n        if (this.state.Email && this.state.Login && this.state.Password && this.state.ConfirmPassword && !this.state.DuringOperation) {\r\n            if (this.state.Password === this.state.ConfirmPassword) {\r\n                output = true;\r\n                this.setState({ InfoMessageIsError: false })\r\n                this.setState({ InfoMessage: \"\" })\r\n            }\r\n            else {\r\n                this.setState({ InfoMessageIsError: true })\r\n                this.setState({ InfoMessage: \"Hasła nie są takie same\" })\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    ClearForm() {\r\n        document.getElementById(\"registerForm\").reset();\r\n\r\n        this.setState({ Email: \"\" })\r\n        this.setState({ Login: \"\" })\r\n        this.setState({ Password: \"\" })\r\n        this.setState({ ConfirmPassword: \"\" })\r\n    }\r\n\r\n    RegisterMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.InfoMessage != \"\" && this.state.InfoMessageIsError == false) {\r\n                return (\r\n\r\n                    <Alert className=\"text-center\" variant=\"success\">\r\n                        {this.state.InfoMessage}\r\n                    </Alert>\r\n                );\r\n            }\r\n            else if (this.state.InfoMessage != \"\" && this.state.InfoMessageIsError == true) {\r\n                return (\r\n                    <Alert className=\"text-center mt-3\" variant=\"danger\">\r\n                        {this.state.InfoMessage}\r\n                    </Alert>\r\n                );\r\n            }\r\n            else {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.OperationSuccess === true) {\r\n            return <Redirect to='/Login' as ={Link} to={\r\n                {\r\n                    pathname: '/Login',\r\n                    showInfoLog: true,\r\n                }} />\r\n        }\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n\r\n                        <Form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n                            <h1 className=\"display-3 text-center mt-5\">Rejestracja</h1>\r\n\r\n                            {this.RegisterMessage()}\r\n\r\n                            <Form.Group controlId=\"formEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Email\" name=\"Email\" required onChange={this.handleChange} value={this.state.Email} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formLogin\">\r\n                                <Form.Label>Login</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter login\" name=\"Login\" required onChange={this.handleChange} value={this.state.Login} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPassword\">\r\n                                <Form.Label>Hasło</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"Password\" required onChange={this.handleChange} value={this.state.Password} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPasswordRepeat\">\r\n                                <Form.Label>Powtórz hasło</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"ConfirmPassword\" required onChange={this.handleChange} value={this.state.ConfirmPassword} />\r\n                            </Form.Group>\r\n                            <div class=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Zarejestruj\r\n                         </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Button variant=\"outline-primary\" as={Link} to=\"/Login\" className=\"mt-3\"  >\r\n                        Wróć\r\n            </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React, { Component } from 'react'\r\nimport { RecipesEndPointAPI } from '../API/RecipesEndPointAPI'\r\nimport { Spinner, Container, Row, Col,  Button, Alert, Form, ListGroup } from 'react-bootstrap';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\n\r\nclass AddOrEdit extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Edit: false,\r\n            InfoMessage: \"\",\r\n            DuringOperation: false,\r\n            CanSubmit: false,\r\n            RecipeName: \"\",\r\n            Instructions: \"\",\r\n            Ingredients: [],\r\n            IngredientsInput: \"\",\r\n            SelectedIngredient: \"\",\r\n            isPublic: false,\r\n            Image: null,\r\n            ImagePreview: null,\r\n            ImageName: \"\",\r\n            ID: \"\",\r\n            OperationComplete: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChangeFile = this.onChangeFile.bind(this);\r\n        this.handleIngredientAdd = this.handleIngredientAdd.bind(this);\r\n        this.handleRecipeClick = this.handleRecipeClick.bind(this);\r\n        this.handleIngredientRemove = this.handleIngredientRemove.bind(this);\r\n        this.DeleteImage = this.DeleteImage.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        bsCustomFileInput.init()\r\n        this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL +'/food template.png' })\r\n\r\n        try {\r\n            if (this.props.match.params.id != 0) {\r\n                this.setState({ Edit: true })\r\n\r\n                //Jezeli edytujemy, wez dane z prospow\r\n                this.setState({ RecipeName: this.props.location.recipeProps.Name })\r\n                this.setState({ Instructions: this.props.location.recipeProps.Instructions })\r\n                this.setState({ Ingredients: this.props.location.recipeProps.Ingredients })\r\n                this.setState({ Image: this.props.location.recipeProps.Image })\r\n                this.setState({ ImagePreview: this.props.location.recipeProps.Image })\r\n                this.setState({ ImageName: this.props.location.recipeProps.nameOfImage })\r\n                this.setState({ ID: this.props.location.recipeProps.ID })\r\n                this.setState({ isPublic: this.props.location.recipeProps.isPublic })\r\n            }\r\n\r\n            //Jak nie da rady pobierz z API\r\n        } catch (error) {\r\n            this.setState({ DuringOperation: true })\r\n\r\n            let result = RecipesEndPointAPI.GetRecipeByID(this.props.match.params.id)\r\n            result.then(data => {\r\n                console.log(\"Pobrano przepis\")\r\n                this.setState({ RecipeName: data.name })\r\n                this.setState({ Instructions: data.instruction })\r\n                this.setState({ Ingredients: data.ingredients })\r\n                this.setState({ ImageName: data.nameOfImage })\r\n                this.setState({ ID: data.recipeId })\r\n                this.setState({ isPublic: data.isPublic })\r\n\r\n                this.setState({ DuringOperation: false })\r\n                this.DonwloadRecipeImage();\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ InfoMessage: obj.message })\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    DonwloadRecipeImage() {\r\n        let that = this\r\n        let outside\r\n\r\n        if (this.state.ImageName === null) {\r\n            this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n        }\r\n        else {\r\n\r\n            this.setState({ DuringOperation: true })\r\n            let result = RecipesEndPointAPI.DownloadImage(this.state.ImageName)\r\n            result.then(data => {\r\n                console.log(\"Pobrano obrazek\")\r\n                outside = URL.createObjectURL(data)\r\n                this.setState({ Image: outside })\r\n                this.setState({ ImagePreview: outside })\r\n                this.setState({ DuringOperation: false })\r\n            })\r\n                .catch(error => {\r\n                    //Connection problem\r\n                    if (error == \"TypeError: response.text is not a function\") {\r\n                        console.log('Problem z połączeniem')\r\n                        this.setState({ DuringOperation: false })\r\n                    }\r\n                    else {\r\n                        try {\r\n                            var obj = JSON.parse(error)\r\n                            console.log(obj.message)\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        //Another problem...\r\n                        catch (error) {\r\n                            console.log(error);\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleCheckboxChange = event =>\r\n    this.setState({ isPublic: event.target.checked })\r\n\r\n    handleIngredientAdd(e) {\r\n        const { IngredientsInput, Ingredients } = this.state;\r\n\r\n        const nextState = [...Ingredients, IngredientsInput];\r\n        this.setState({ Ingredients: nextState, IngredientsInput: '' });\r\n    }\r\n\r\n    handleRecipeClick(e) {\r\n        this.setState({ SelectedIngredient: e.target.innerHTML })\r\n    }\r\n\r\n    handleIngredientRemove(e) {\r\n        const { Ingredients, SelectedIngredient } = this.state;\r\n        const nextState = Ingredients.filter(x => x !== SelectedIngredient)\r\n        this.setState({ Ingredients: nextState, SelectedIngredient: \"\" });\r\n    }\r\n\r\n    onChangeFile(e) {\r\n        this.setState({ InfoMessage: \"\" })\r\n        let fileName = e.target.files[0].name\r\n        let fileExt = fileName.split('.').pop()\r\n\r\n        if (fileExt === \"jpg\" || fileExt === \"jpeg\" || fileExt === \"gif\" || fileExt === \"png\") {\r\n            this.setState({ Image: e.target.files[0] })\r\n            this.setState({ ImageName: fileName })\r\n\r\n            var file = e.target.files[0];\r\n            var reader = new FileReader();\r\n            var url = reader.readAsDataURL(file);\r\n\r\n            reader.onloadend = function (e) {\r\n                this.setState({\r\n                    ImagePreview: [reader.result]\r\n                })\r\n            }.bind(this);\r\n        }\r\n        else {\r\n            this.setState({ InfoMessage: \"Wybierz poprawny format pliku!\" })\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if (this.CanSubmit()) {\r\n            this.setState({ DuringOperation: true })\r\n            this.setState({ InfoMessage: \"\"})\r\n\r\n            if (this.state.Edit) {\r\n                let result = RecipesEndPointAPI.PutRecipes(this.state.ID, this.state.ID, this.state.RecipeName, this.state.Instructions, this.state.Ingredients, this.state.Image, this.state.ImageName, this.state.isPublic)\r\n                result.then(data => {\r\n                    console.log(\"Przepis zaktualizowany\")\r\n                    this.setState({ DuringOperation: false })\r\n                    this.setState({ OperationComplete: true })\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                this.setState({ InfoMessage: obj.message })\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                let result = RecipesEndPointAPI.InsertRecipe(this.state.RecipeName, this.state.Instructions, this.state.Ingredients, this.state.Image, this.state.isPublic)\r\n                result.then(data => {\r\n                    console.log(\"Przepis dodany\")\r\n                    this.setState({ DuringOperation: false })\r\n                    this.setState({ OperationComplete: true })\r\n                })\r\n                    .catch(error => {\r\n                        //Connection problem\r\n                        if (error == \"TypeError: response.text is not a function\") {\r\n                            console.log('Problem z połączeniem')\r\n                            this.setState({ InfoMessage: 'Problem z połączeniem'})\r\n                            this.setState({ DuringOperation: false })\r\n                        }\r\n                        else {\r\n                            try {\r\n                                var obj = JSON.parse(error)\r\n                                console.log(obj.message)\r\n                                this.setState({ InfoMessage: obj.message })\r\n                                this.setState({ DuringOperation: false })\r\n                            }\r\n                            //Another problem...\r\n                            catch (error) {\r\n                                console.log(error);\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    DeleteImage() {\r\n        this.setState({ ImageName: \"\" })\r\n        this.setState({ Image: null })\r\n        this.setState({ ImagePreview: process.env.REACT_APP_PUBLIC_URL + '/food template.png' })\r\n\r\n    }\r\n\r\n    CanSubmit() {\r\n        let output = false;\r\n        if (this.state.RecipeName && this.state.Instructions && this.state.Ingredients.length > 0 && !this.state.DuringOperation && this.state.InfoMessage == \"\") {\r\n            output = true;\r\n        }\r\n        return output;\r\n    }\r\n\r\n    SubmitMessage() {\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.state.InfoMessage != \"\") {\r\n            return (\r\n                <Alert className=\"text-center mt-3\"  variant=\"danger\">\r\n                {this.state.InfoMessage}\r\n              </Alert>\r\n              )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.OperationComplete === true) {\r\n            return <Redirect to='/UserRecipes' />\r\n        }\r\n\r\n        const ingredients = this.state.Ingredients.map(item =>\r\n            <ListGroup.Item as=\"li\" active={this.state.SelectedIngredient === item} className=\"Clickable\" action onClick={this.handleRecipeClick}>\r\n                {item}\r\n            </ListGroup.Item>\r\n        )\r\n\r\n        if (this.state.DuringOperation) {\r\n            return (\r\n\r\n                <div class=\"d-flex justify-content-center Center\">\r\n                    <Spinner animation=\"grow\" variant=\"primary\" role=\"status\">\r\n                        <span className=\"sr-only my-auto mx-auto\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n\r\n            return (\r\n\r\n                <Form id=\"registerForm\" onSubmit={this.handleSubmit}>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {this.SubmitMessage()}\r\n\r\n                                <Form.Group controlId=\"formName\">\r\n                                    {/* <Form.Label   className=\"text-center\" style={{width: \"100%\"}}>Nazwa przepisu:</Form.Label> */}\r\n                                    <h3 className=\"text-center mt-3\">Nazwa przepisu:</h3>\r\n                                    <Form.Control type=\"text\" size=\"lg\" name=\"RecipeName\" required onChange={this.handleChange} value={this.state.RecipeName} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n\r\n                            <Col md={8}>\r\n\r\n                                <Form.Group controlId=\"formInstructions\">\r\n                                    {/* <Form.Label className=\"text-center\" style={{width: \"100%\"}} >Przepis:</Form.Label> */}\r\n                                    <h3 className=\"text-center\">Przepis:</h3>\r\n                                    <Form.Control as=\"textarea\" style={{ height: \"400px\" }} size=\"lg\" type=\"text\" name=\"Instructions\" required onChange={this.handleChange} value={this.state.Instructions} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formIsPublic\">\r\n                                <Form.Check type=\"checkbox\" label=\"Przepis publiczny\" className=\"CheckBoxIsRecipePublic\" name=\"isPublic\" onChange={this.handleCheckboxChange} checked={this.state.isPublic} />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <Form.Group controlId=\"formIngredients\">\r\n                                    {/* <Form.Label>Składniki</Form.Label> */}\r\n                                    <h3 className=\"text-center\">Składniki:</h3>\r\n                                    <Form.Control type=\"text\" name=\"IngredientsInput\" onChange={this.handleChange} value={this.state.IngredientsInput} />\r\n                                </Form.Group>\r\n\r\n                                <div class=\"d-flex justify-content-center mb-3\">\r\n                                    <Button disabled={!this.state.IngredientsInput} onClick={this.handleIngredientAdd} className=\"mr-3\">Dodaj</Button>\r\n                                    <Button disabled={!this.state.SelectedIngredient} onClick={this.handleIngredientRemove}>Usuń</Button>\r\n                                </div>\r\n                                <ListGroup id=\"IngredientsGroup\" as=\"ul\">\r\n                                    {ingredients}\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={12}>\r\n                                <h3 className=\"text-center\">Obrazek:</h3>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <div class=\"custom-file mb-3\">\r\n                                    <input id=\"formFile\" type=\"file\" class=\"custom-file-input\" accept=\".png, .jpg, .jpeg, .gif\" onChange={this.onChangeFile} />\r\n                                    <label class=\"custom-file-label\" for=\"inputGroupFile01\">Wybierz obrazek</label>\r\n\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col md={2}>\r\n                                <div class=\"custom-file mb-3\">\r\n\r\n                                    <div class=\"d-flex justify-content-center\">\r\n                                        <Button variant=\"primary\" onClick={this.DeleteImage} size=\"lg\" disabled={!this.state.ImageName}>\r\n                                            Usuń obrazek\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <img className=\"smallImg mx-auto d-block mb-3\" src={this.state.ImagePreview} alt=\"recipe image\"/>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                    <Button variant=\"primary\" type=\"submit\" size=\"lg\" disabled={!this.CanSubmit()}>\r\n                                        {this.state.Edit ? \"Zaaktualizuj przepis\" : \"Dodaj przepis\"}\r\n                                    </Button>\r\n                                </div>\r\n\r\n                                <div class=\"d-flex justify-content-center mb-3\">\r\n                                    <Button variant=\"outline-primary\" as={Link} to=\"/UserRecipes\" className=\"mt-3\"  >\r\n                                        Wróć\r\n                                </Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default AddOrEdit ","import React, { Fragment } from 'react'\r\n\r\nimport Header from '../src/components/Header';\r\nimport LoginForm from '../src/components/LoginForm';\r\nimport Main from '../src/Main';\r\nimport Recipes from '../src/components/Recipes'\r\nimport { Authentication } from '../src/helpers/Authentication'\r\nimport RecipePreview from '../src/components/RecipePreview'\r\nimport About from '../src/components/About'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport ScrollToTop from '../src/helpers/ScrollToTop'\r\n\r\nimport RegisterForm from './components/RegisterForm';\r\nimport AddOrEdit from './components/AddOrEdit';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n      <Fragment>\r\n      <ScrollToTop />\r\n        <Header />\r\n        <Switch>\r\n\r\n          <Route path=\"/Login\" component={LoginForm} />\r\n\r\n          <Route path=\"/Register\" component={RegisterForm} />\r\n\r\n          <Route path=\"/About\" component={About} />\r\n\r\n          <PrivateRoute path=\"/UserRecipes\" component={Recipes} />\r\n\r\n          <PrivateRoute path=\"/PublicRecipes\" component={Recipes} />\r\n\r\n          <PrivateRoute path=\"/FavouritesRecipes\" component={Recipes} />\r\n\r\n\r\n          <PrivateRoute path=\"/RecipePreview/:id\" component={RecipePreview} />\r\n\r\n          <PrivateRoute path=\"/Edit/:id\" component={AddOrEdit} />}/>\r\n\r\n          <PrivateRoute path=\"/\" component={Recipes} />\r\n\r\n        </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, exact, strict, path, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    Authentication.isAuthenticated()\r\n      ? <Component {...props} />\r\n      : <Redirect to={{\r\n        pathname: '/Login',\r\n        state: { from: props.location }\r\n      }} />\r\n  )} />\r\n)\r\n\r\n// function PrivateRoute({ children, ...rest }) {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={({ location }) =>\r\n//       Authentication.isAuthenticated() ? (\r\n//           children\r\n//         ) : (\r\n//           <Redirect\r\n//             to={{\r\n//               pathname: \"/Login\",\r\n//               state: { from: location }\r\n//             }}\r\n//           />\r\n//         )\r\n//       }\r\n//     />\r\n//   );\r\n// }\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/custom-btsp.scss'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}